{"cells":[{"cell_type":"markdown","metadata":{"id":"TDmnzDT1fwP2"},"source":["### **데이터 불러오기**"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24366,"status":"ok","timestamp":1685603058495,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"wPcjSk6ff3s9","outputId":"cdd6f3ee-8f73-412e-8ca6-dc4b97e99e46"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/mydrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/mydrive')"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import regex as re\n","data = pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/test_데마 (3).csv', index_col=0, encoding='UTF-8')\n","data2 = pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/test_데마 (6).csv', index_col=0, encoding='UTF-8')"],"metadata":{"id":"gY_09MFvxRGE"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":2314,"status":"ok","timestamp":1685598484686,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"tPoIDxBuMfqX","outputId":"64ec4d30-d150-4472-eca7-29f1cb725aff"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd                      product_name  net_order_qty  \\\n","0      20230124153976                  잔칫집 식혜 240ml 30입              1   \n","1      20230124155563                 백설 한입쏙 비엔나 120g*2              1   \n","2      20230125158386                    비비고 왕교자 1.05kg              1   \n","3      20230126164638                 고메 바삭쫄깃한 탕수육 900g              1   \n","4      20230125159705                      햇반 매일잡곡밥210g             20   \n","...               ...                               ...            ...   \n","45870  20230102972321                고메 거멍 모짜체다핫도그 340g              1   \n","45871  20230102972720         [앱전용특가]비비고 차돌된장찌개 460gX4개              1   \n","45872  20230101964953         [앱전용특가]비비고 차돌된장찌개 460gX4개              1   \n","45873  20230101970142         [식물성]고메 플랜테이블 함박스테이크 150g              1   \n","45874  20230101966180  리턴업 전립소 쏘팔메토 골드 1000mgX60캡슐(2개월)              1   \n","\n","       net_order_amt gender  age_grp employee_yn  order_date prime_yn  \n","0           9.803170      F        2           Y    20230124        N  \n","1           8.256607      M        3           Y    20230124        N  \n","2           9.348449      F        4           N    20230125        N  \n","3           9.667259      F        4           N    20230126        Y  \n","4           9.994653      M        4           N    20230125        Y  \n","...              ...    ...      ...         ...         ...      ...  \n","45870       8.648397      M        5           Y    20230102        Y  \n","45871       9.639327      F        3           N    20230102        N  \n","45872       9.639327      F        4           N    20230101        N  \n","45873       7.939872      M        4           Y    20230101        Y  \n","45874      10.406140      M        5           N    20230101        Y  \n","\n","[45875 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-34dabc60-f97e-4e8a-8972-5d0898bd0a4b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>prime_yn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230124153976</td>\n","      <td>잔칫집 식혜 240ml 30입</td>\n","      <td>1</td>\n","      <td>9.803170</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>Y</td>\n","      <td>20230124</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230124155563</td>\n","      <td>백설 한입쏙 비엔나 120g*2</td>\n","      <td>1</td>\n","      <td>8.256607</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230124</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230125158386</td>\n","      <td>비비고 왕교자 1.05kg</td>\n","      <td>1</td>\n","      <td>9.348449</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230125</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230126164638</td>\n","      <td>고메 바삭쫄깃한 탕수육 900g</td>\n","      <td>1</td>\n","      <td>9.667259</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230126</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230125159705</td>\n","      <td>햇반 매일잡곡밥210g</td>\n","      <td>20</td>\n","      <td>9.994653</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230125</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>45870</th>\n","      <td>20230102972321</td>\n","      <td>고메 거멍 모짜체다핫도그 340g</td>\n","      <td>1</td>\n","      <td>8.648397</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>20230102</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>45871</th>\n","      <td>20230102972720</td>\n","      <td>[앱전용특가]비비고 차돌된장찌개 460gX4개</td>\n","      <td>1</td>\n","      <td>9.639327</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230102</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>45872</th>\n","      <td>20230101964953</td>\n","      <td>[앱전용특가]비비고 차돌된장찌개 460gX4개</td>\n","      <td>1</td>\n","      <td>9.639327</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>N</td>\n","    </tr>\n","    <tr>\n","      <th>45873</th>\n","      <td>20230101970142</td>\n","      <td>[식물성]고메 플랜테이블 함박스테이크 150g</td>\n","      <td>1</td>\n","      <td>7.939872</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>20230101</td>\n","      <td>Y</td>\n","    </tr>\n","    <tr>\n","      <th>45874</th>\n","      <td>20230101966180</td>\n","      <td>리턴업 전립소 쏘팔메토 골드 1000mgX60캡슐(2개월)</td>\n","      <td>1</td>\n","      <td>10.406140</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>Y</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>45875 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34dabc60-f97e-4e8a-8972-5d0898bd0a4b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-34dabc60-f97e-4e8a-8972-5d0898bd0a4b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-34dabc60-f97e-4e8a-8972-5d0898bd0a4b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}],"source":["import pandas as pd\n","import numpy as np\n","import regex as re\n","\n","# Load your data frame\n","data = pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/data/tmk_bda_train.csv', index_col=0, encoding='UTF-8')\n","data"]},{"cell_type":"markdown","metadata":{"id":"TdfBJ-yNgZpt"},"source":["### **생각정리**"]},{"cell_type":"markdown","metadata":{"id":"XhV8HVE2WMPf"},"source":["**분류하면서 헷갈리는 것**\n","- **꿀 고구마(비주류)**, 밥이랑 야채(주류), 다담(비주류), 비비고칩(비주류), 하선정 오이지/다진마늘 등 (주류 - 양념도 존재하므로 하선정으로 분류하면 안됨)\n","- 호떡믹스(주류), 산들애 멸치다시마 육수(비주류), 깐메추리알(주류), CJ명가 김자반(주류)\n","- **밸런스밀(주류 - 근데 CJ에서 낸건데.. 그리고 과자도 있음.. 흠 그리고 꽤나 잘팔려)**\n","- 이츠웰 건강한 도시락(주류, 근데 이츠웰은 비주류 식품이 많음;; 하)\n","- 동치미냉면육수(주류), 쁘띠첼(주류.. 가 맞나?)\n","- 비비고 테이블 특 선물세트 (특양지곰탕 어쩌고 - 주류, 근데 ()를 지워버리면 분류 안될수도 있음)\n","- 비비고칩(주류..가 맞나?), 바삭칩(주류.. 가맞나?;)\n","- 이츠웰 해물모둠(비주류 - 신선식품이라는데..)\n","- 병아리콩.. 이 밥/죽/면류라는데요? 그레인보울이라는데요? (주류)\n","- 하선정쌈무.. (주류)라는데요 반찬에 들어간다는데.. 쩝\n","- 백설스모크치킨과 바베큐소스..그릴드시푸드와 베지바베큐소스.. 는 치킨이 먼저니까 주류겠지? (주류)\n","- 딜라이트 프로젝트 눈꽃 솜사탕.. (주류)\n","- **명란젓이 신선식품? (비주류)** **냉동애플망고가 간식일까 신선식품일까..? 애플아이스망고바는? (비주류)**.. \n","- 자몽같은건 다 신선식품? ㅠ (비주류)\n","- **냉동블루베리**는..? 비주류가 맞겠지요\n","- 견과... 는 그냥 (주류)\n","- **임직원 생일 선물은** 뭘까? **설사원선물신청 특별한선택**.. 은 뭘까? .. 어쩌라고\n","- **더마켓 BEST**.. 알 수 없음\n","- 포켓팝콘 (주류) 아니 과자가 진짜 고민돼 !!\n","- **건강란**..(주류) 두부류에 들어가있는데 신선식품이라고 보는게 맞나? 황도캔도? (비주류)\n","- 비요뜨 아이스크림 간식이라 주류 (주류)\n","- 근데 **호떡믹스 식빵믹스 와플믹스 등등은 가루라서 비주류 취급**인데 이거 맞나? 난 주류라고 생각하는데"]},{"cell_type":"markdown","metadata":{"id":"_tK4pzCoXliZ"},"source":["**분류 팁**\n","- 최대한 브랜드 이름 위주로 분류하고, 하선정 등 양념류도 취급하는 브랜드만 주의해서 분류하기\n","- 초비상... 비비고 핫소스가 있음 ;; **그럼 비비고로 분류하면 안되는데** ..? 소스라는 이름으로 먼저 선분류를 해야하나 ㅠ\n","- 그리고 비비고진한교자칼국수 < 라고 통으로 이름 되어있는 것들 칼국수라고만 해도 분류가 되나?\n","- 스파게티 < 이런거 키워드로 잡으면 소스도 같이 걸러짐"]},{"cell_type":"markdown","metadata":{"id":"xivCCqjJiD_R"},"source":["### **total_count 전처리**"]},{"cell_type":"markdown","metadata":{"id":"zVnBMhVAxmVM"},"source":["#### **(완료) 1. 한정/임직원/이벤트 정보 추출**\n","- product_name에서 [] 안에 들어있는 ~개 한정, 임직원 등의 데이터 사전 제거\n","   - 문제점1: []가 두번 들어가있는 경우 한번만 추출됨 (해결)\n","   - 문제점2: [1000개한정미정당 오류 (해결)\n","- 이후 product_info에 해당 정보 넣어주고 product_name에서는 product_info 내용 지워주기"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1685598484686,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"OOrK7oL0poQO","outputId":"4b61d95b-0d85-401e-afa9-fbbda6b98f9c"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-3-4be3dd1a39e9>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(r'\\[1000개한정미정당', '').str.strip()\n"]}],"source":["# Extract the information within square brackets and store it in 'product_info' column\n","data['product_info'] = data['product_name'].str.findall(r'\\[(.*?)\\]')\n","\n","# Convert the extracted information to a string\n","data['product_info'] = data['product_info'].apply(lambda x: ', '.join(x) if x else '')\n","\n","# Extract the exact phrase '[1000개한정미정당' from 'product_name' and store it in 'product_info'\n","data.loc[data['product_name'].str.contains(r'\\[1000개한정미정당'), 'product_info'] = '[1000개한정미정당'\n","\n","# Exclude the 'product_info' from 'product_name'\n","data['product_name'] = data.apply(lambda x: re.sub(r'\\[(.*?)\\]', '', x['product_name']).strip(), axis=1)\n","\n","# Remove the exact phrase '[1000개한정미정당' from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(r'\\[1000개한정미정당', '').str.strip()\n","\n","# Remove any extra spaces resulting from the replacement\n","data['product_name'] = data['product_name'].str.strip()"]},{"cell_type":"markdown","metadata":{"id":"9ezCBOMizOq2"},"source":["#### **(완료) 2. 용량 데이터 추출** <br/>\n","g, G, kg, KG, ml, L 등이 포함된 용량 데이터 추출 후 product_name에서는 제거\n","- 용량이 두 가지 이상일 경우 ,로 이어서 모두 추출할 수 있게 함"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2686,"status":"ok","timestamp":1685598487364,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"ocgdARnOALc_","outputId":"863e5688-aa2d-421a-e8a2-7b804d35e6fa"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-4-010ec44c3590>:12: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(pattern_gram, '')\n"]}],"source":["import pandas as pd\n","import re\n","\n","# Define a regular expression pattern to extract the desired information without unnecessary characters\n","pattern_gram = r'(\\d+(?:\\.\\d+)?\\s*[gGmMlLkK]+)'\n","\n","# Extract the quantity information from 'product_name' column using regular expressions\n","data['product_gram'] = data['product_name'].str.extractall(pattern_gram, flags=re.IGNORECASE).groupby(level=0).agg(','.join)\n","data['product_gram'] = data['product_gram'].str.strip()\n","\n","# Remove the extracted quantity information from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(pattern_gram, '')\n","\n","# Remove any extra spaces resulting from the replacement\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"EKELzwIe4rdM"},"source":["**용량 데이터 관련 문제점** <br/>\n","용량은 사실 사용하지 않을 가능성이 높아서 다음과 같은 1, 2개 정도의 오차는 배제함\n","- 어떤 g들이 추출이 안되는 문제 발생 (해결)\n","- **ex1. '비비고 고등어구이 60g+소스15g'처럼  추가적인 판단이 필요한 애매한 경우 존재**\n","- **ex2. (냉동) 비비고 테이블 특설렁탕 700x3개+(냉동) 비비고 테이블 특양지곰탕 700gx3개처럼 오타로 인해 추출 안되는 경우도 존재**\n","  - 아이시스 8.0 ECO 무라벨 300펫 80입_패밀리데이: 'ml'가 '펫'으로 들어가있는 문제\n","- **ex3. The 더건강한 닭가슴살 통살 1000g(100g*10)(유통기한23.02.19까지)처럼 동일한 용량을 중복해서 표시하는 경우 존재**"]},{"cell_type":"markdown","metadata":{"id":"vxLra1fpxqlk"},"source":["#### **(완료) 3. 수량 데이터 추출** <br/>\n","입, 개, 묶음, box, 번들, 캔이 포함된 수량 데이터를 추출하는 코드\n","- 입, 개, 묶음, box, 번들, 캔을 기준으로 추출한 후 숫자만 남기고 한글은 지움\n","- 이후 product_name에서 제거"]},{"cell_type":"markdown","metadata":{"id":"UO7aVLijz0rU"},"source":["**수량 데이터 추출 관련 수정사항 (0525)**\n","- 개입, EA, 종, 묶음 등을 수량에 반영하는 것이 의미가 없음\n","  - 우리가 처음에 수량 데이터를 추출하려고 한건, net_order_qty를 올바르게 해석하기 위함\n","  - 패키지 구성품이 몇 개 들어있는지는 우리가 원하는 수량이 아님\n","  - ex1. 20개의 소세지가 들어있는 맥스봉 소세지 상품 1개를 구매한걸 20개를 구매했다고 보기에는 무리가 있음\n","  - ex2. 5개의 사골곰탕이 들어있는 사골곰탕 패키지 1개를 구매한걸 5개를 구매했다고 간주하기에는 무리가 있음\n","- **입, 개, 캔, *2, X2, 번들**이 수량과 직접적인 연관이 있는 키워드\n","  - 양념은 약간 애매하긴 한데 하나 단위로도 판매하기 때문에 번들도 수량에 포함시키는게 맞다고 판단\n","  - 묶음은 굳이? 12입(6입x묶음)처럼 동일한 수량을 다시 한번 적은 경우가 많음\n","- () 안에 필요한 수량 정보가 들어가있는 경우도 있고, 아닌 경우도 있기 때문에 수량 선처리 후 () 처리"]},{"cell_type":"markdown","metadata":{"id":"R5pPjSfRLwYR"},"source":["**3-1. 수량 사전 작업 (1) - 개입/인분**\n","- 개까지 포함해서 추출되는 문제 때문에 개입만 따로 정규표현식 사용하여 추출\n","- 인, 인분 같이 넣으면 처리가 잘 안되어서 분리"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1685598487364,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"_q70ooeaUz69","outputId":"f87dfce2-fd4f-4f5a-926f-883bf6df814b"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-4092153a9a26>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(pattern_count1, '')\n"]}],"source":["import pandas as pd\n","import re\n","\n","# Define the regular expression pattern to extract the desired information\n","pattern_count1 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*(?:개입|인분))'\n","\n","# Extract the product_count1 information from 'product_name' column using regular expressions\n","data['product_count1'] = data['product_name'].str.extract(pattern_count1, flags=re.IGNORECASE)\n","\n","# Convert the extracted product_count1 information to a string\n","data['product_count1'] = data['product_count1'].astype(str)\n","\n","# Remove the extracted product_count1 information from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(pattern_count1, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"0tdxkHGRwLYR"},"source":["**3-2. 수량 사전 작업 (2) - 인/EA/종/묶음/캡슐/포/정/구/매 추출** <br/>\n","필요 없는 숫자 데이터이므로 추출 후 삭제\n","- 문제점1: 5 EA 등 띄어쓰기 포함된 경우는 추출 안됨 (해결)\n","- 문제점2: ea 소문자 추출 안됨 (해결)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1685598487365,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"7myrdOo6rVEW","outputId":"3cb8d32e-d393-4b3f-c4eb-15e49de3757c"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-6-b2a13fe3e0ec>:6: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(pattern_count2, '')\n"]}],"source":["# Extract all matching quantities from 'product_name' column using regular expressions\n","pattern_count2 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*(?:\\s?(?:인|EA|ea|종|묶음|캡슐|포|정|구|매)))'\n","data['product_count2'] = data['product_name'].str.extract(pattern_count2, flags=re.IGNORECASE)\n","\n","# Remove the extracted 'number + EA', 'number + 종', 'number + 묶음' from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(pattern_count2, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"o8xPmlKmwk1m"},"source":["**3-3. 수량 처리 - 팩/개/번들/캔 추출** <br/>\n","필요한 데이터이므로 추출 후 숫자 제외하고 문자는 날리기\n","- 두 가지 이상일 경우 ,로 이어서 모두 추출할 수 있게 함"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7DUxGRJ1HkDD"},"outputs":[],"source":["# Define a regular expression pattern to extract the desired information\n","pattern_count = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*[~팩개번들캔])'\n","\n","# Extract all matching quantities from 'product_name' column using regular expressions\n","data['product_count'] = data['product_name'].str.findall(pattern_count, flags=re.UNICODE)\n","\n","# Remove the product_count part from product_name\n","data['product_name'] = data['product_name'].str.replace(pattern_count, '', regex=True)\n","\n","# Strip any leading or trailing whitespace from product_name column\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Update the product_count column to contain only numbers\n","data['product_count'] = data['product_count'].apply(lambda x: ','.join(re.findall(r'\\d+', ','.join(x))))\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"zNnP0ny0zRRz"},"source":["**3-4. 수량 사전 작업 (3)  - () 제거** <br/>\n","() 안에 있는 중복되는 수량 데이터를 사전 제거\n","- ex. 1box, 40입 (20입x2묶음) 등\n","- 추후 활용될 여지가 없는 데이터이므로 삭제"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"41qHYOhBzrfY"},"outputs":[],"source":["# Extract the information within Praenthesis and store it in 'product_info2' column\n","data['product_info2'] = data['product_name'].str.findall(r'\\((.*?)\\)')\n","\n","# Convert the extracted information to a string\n","data['product_info2'] = data['product_info2'].apply(lambda x: ', '.join(x) if x else '')\n","\n","# Exclude the 'product_info' from 'product_name'\n","data['product_name'] = data.apply(lambda x: re.sub(r'\\((.*?)\\)', '', x['product_name']).strip(), axis=1)\n","\n","# Remove any extra spaces resulting from the replacement\n","data['product_name'] = data['product_name'].str.strip()"]},{"cell_type":"markdown","metadata":{"id":"uKuRgCADzUrf"},"source":["**3-5. 수량 2차 처리 - 입 추출** <Br/>\n","() 안에 같은 수량을 표시하는 입이 들어가는 문제 해결하기 위해 () 처리 후 추출\n","- 필요한 데이터이므로 숫자 제외 문자 날리기"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1685598487365,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"ykrxc4AO1N35","outputId":"e24bef3f-bde3-4437-8dbf-29def591671a"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-1abdb9b97a77>:11: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(pattern_count3, '')\n"]}],"source":["# Define the regular expression pattern to extract the desired information\n","pattern_count3 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*입)'\n","\n","# Extract the product_count3 information from 'product_name' column using regular expressions\n","data['product_count3'] = data['product_name'].str.extract(pattern_count3, flags=re.IGNORECASE)\n","\n","# Convert the extracted product_count3 information to a string\n","data['product_count3'] = data['product_count3'].astype(str)\n","\n","# Remove the extracted product_count3 information from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(pattern_count3, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Replace the values in the product_count3 column containing 'x' with blanks\n","data['product_count3'] = data['product_count3'].replace('.*x.*', '', regex=True)\n","\n","# Update the product_count3 column to contain only numbers\n","data['product_count3'] = data['product_count3'].str.extract(r'(\\d+)')\n","\n","# Drop rows where 'product_count3' column is empty\n","data = data[data['product_count3'].str.strip().astype(bool)]\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"BgTwtHNm01ev"},"source":["**3-6. 수량 3차 처리 - *숫자, x숫자, X숫자 추출** <Br/>\n","*, x, X 뒤에 있는 데이터 모조리 긁어와서 숫자만 남기고 다 삭제하기\n","- '들'과 같이 추출 후 남은 데이터들 삭제해주기\n","- x가 여러 번 있는 경우 하나만 남고 뒤의 아예 정보가 사라져버려서 수정"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1685598487366,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"YQGcwCgF5kHT","outputId":"d0c63fd9-f3f4-4c5f-8a8b-d159bb7be0d3"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-10-f29fc93c9971>:8: FutureWarning: The default value of regex will change from True to False in a future version.\n","  data['product_name'] = data['product_name'].str.replace(r'[xX*](?:\\+)?.{0,2}', '')\n"]}],"source":["# Extract up to two characters after 'x', 'X', or '*' from 'product_name' and store them in 'product_count4'\n","data['product_count4'] = data['product_name'].str.extract(r'[xX*](?:\\+)?(.{0,2})')\n","\n","# Remove any extra spaces resulting from the extraction\n","data['product_count4'] = data['product_count4'].str.strip()\n","\n","# Remove the extracted information from 'product_name'\n","data['product_name'] = data['product_name'].str.replace(r'[xX*](?:\\+)?.{0,2}', '')\n","\n","# Remove any extra spaces resulting from the replacement\n","data['product_name'] = data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","data = data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"Zlhqz3rO6-r7"},"source":["**(해결) 수량 데이터 관련 문제점**\n","- 문제점1: 2x2 등의 데이터가 추출이 안됨 (해결)\n","  - 동시에 추출해보려고 했는데 조건이 복잡해져서 오류가 뜸\n","  - x가 애매하게 추출된 경우는 전부 공백처리 하고, x가 들어간 숫자 데이터는 따로 처리한 후 합치는 방식 적용 \n","- 문제점2: 8번들X2개처럼 번들, 개가 둘다 들어있는 경우에 하나만 추출됨 (해결)\n","- 문제점3: product_info 뽑아내는 과정에서 [가 하나만 들어있는 데이터에서 오류 발생 (해결)"]},{"cell_type":"markdown","metadata":{"id":"wzFqDTwXJ83Z"},"source":["#### **(완료) 4. 최종 수량 데이터 생성** <br/>\n","- product_count는 두개 이상 추출된 경우 원래의 수량을 나타내게 함 (X 연산 적용)\n","- product_count, produt_count3, product_count4 모두 곱하기\n","- net_order_qty에 total_count 곱하기"]},{"cell_type":"markdown","metadata":{"id":"99R8rVnQKXqA"},"source":["**4-1. product_count 곱연산**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CEAktagkKZN_"},"outputs":[],"source":["# Multiply two numbers in product_count column\n","data['product_count'] = data['product_count'].apply(lambda x: str(int(x.split(',')[0]) * int(x.split(',')[1])) if ',' in x else x)"]},{"cell_type":"markdown","metadata":{"id":"DObvSqTkKoGd"},"source":["**4-2. product_count 하나로 합치기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zjCyX99aLAYT"},"outputs":[],"source":["# Convert columns to numeric data type\n","data['product_count'] = pd.to_numeric(data['product_count'], errors='coerce')\n","data['product_count3'] = pd.to_numeric(data['product_count3'], errors='coerce')\n","data['product_count4'] = pd.to_numeric(data['product_count4'], errors='coerce')\n","\n","# Multiply the numeric columns and store the result in 'total_count'\n","data['total_count'] = (data['product_count'].fillna(1) * data['product_count3'].fillna(1) * data['product_count4'].fillna(1))"]},{"cell_type":"markdown","metadata":{"id":"50g-aSYsVvkt"},"source":["**4-3. total_count와 net_order_qty 곱하기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XNpbs0xUVzCO"},"outputs":[],"source":["# Convert columns to numeric data type\n","data['total_count'] = pd.to_numeric(data['total_count'], errors='coerce')\n","data['net_order_qty'] = pd.to_numeric(data['net_order_qty'], errors='coerce')\n","\n","# Multiply the numeric columns and store the result in 'total_count'\n","data['net_order_qty'] = (data['net_order_qty'].fillna(1) * data['total_count'].fillna(1))"]},{"cell_type":"markdown","metadata":{"id":"xs0Em6YKO5Pe"},"source":["#### **5. 임시 칼럼들 drop**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4bufyn_zPY6K"},"outputs":[],"source":["# info\n","data = data.drop(['product_info', 'product_info2'], axis=1)\n","\n","# gram\n","data = data.drop(['product_gram'], axis=1)\n","\n","# count\n","data = data.drop(['total_count', 'product_count', 'product_count1', 'product_count2', 'product_count3', 'product_count4'], axis=1)"]},{"cell_type":"markdown","metadata":{"id":"MEpS9dhfiCuS"},"source":["### **전처리**"]},{"cell_type":"markdown","metadata":{"id":"wKcbnsXUTwOK"},"source":["**product_name 원본 불러오기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_Nwt5LWHTr2d"},"outputs":[],"source":["# Load your data frame\n","data2 = pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/data/tmk_bda_train.csv', index_col=0)  # Replace 'your_data.csv' with your actual file path and encoding if needed\n","data['product_realname'] = data2['product_name']"]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"aEyVDhrlu9-F","executionInfo":{"status":"ok","timestamp":1685598488763,"user_tz":-540,"elapsed":26,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"416323ca-cf7b-4899-ca94-c00061207eb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd     product_name  net_order_qty  net_order_amt gender  \\\n","0      20230124153976           잔칫집 식혜           30.0       9.803170      F   \n","1      20230124155563       백설 한입쏙 비엔나            2.0       8.256607      M   \n","2      20230125158386          비비고 왕교자            1.0       9.348449      F   \n","3      20230126164638     고메 바삭쫄깃한 탕수육            1.0       9.667259      F   \n","4      20230125159705         햇반 매일잡곡밥           20.0       9.994653      M   \n","...               ...              ...            ...            ...    ...   \n","45870  20230102972321    고메 거멍 모짜체다핫도그            1.0       8.648397      M   \n","45871  20230102972720       비비고 차돌된장찌개            4.0       9.639327      F   \n","45872  20230101964953       비비고 차돌된장찌개            4.0       9.639327      F   \n","45873  20230101970142  고메 플랜테이블 함박스테이크            1.0       7.939872      M   \n","45874  20230101966180  리턴업 전립소 쏘팔메토 골드            2.0      10.406140      M   \n","\n","       age_grp employee_yn  order_date prime_yn  \\\n","0            2           Y    20230124        N   \n","1            3           Y    20230124        N   \n","2            4           N    20230125        N   \n","3            4           N    20230126        Y   \n","4            4           N    20230125        Y   \n","...        ...         ...         ...      ...   \n","45870        5           Y    20230102        Y   \n","45871        3           N    20230102        N   \n","45872        4           N    20230101        N   \n","45873        4           Y    20230101        Y   \n","45874        5           N    20230101        Y   \n","\n","                       product_realname  \n","0                      잔칫집 식혜 240ml 30입  \n","1                     백설 한입쏙 비엔나 120g*2  \n","2                        비비고 왕교자 1.05kg  \n","3                     고메 바삭쫄깃한 탕수육 900g  \n","4                          햇반 매일잡곡밥210g  \n","...                                 ...  \n","45870                고메 거멍 모짜체다핫도그 340g  \n","45871         [앱전용특가]비비고 차돌된장찌개 460gX4개  \n","45872         [앱전용특가]비비고 차돌된장찌개 460gX4개  \n","45873         [식물성]고메 플랜테이블 함박스테이크 150g  \n","45874  리턴업 전립소 쏘팔메토 골드 1000mgX60캡슐(2개월)  \n","\n","[45875 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-b2234b71-c677-497c-84a2-5f46f31a7ebb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>prime_yn</th>\n","      <th>product_realname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230124153976</td>\n","      <td>잔칫집 식혜</td>\n","      <td>30.0</td>\n","      <td>9.803170</td>\n","      <td>F</td>\n","      <td>2</td>\n","      <td>Y</td>\n","      <td>20230124</td>\n","      <td>N</td>\n","      <td>잔칫집 식혜 240ml 30입</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230124155563</td>\n","      <td>백설 한입쏙 비엔나</td>\n","      <td>2.0</td>\n","      <td>8.256607</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230124</td>\n","      <td>N</td>\n","      <td>백설 한입쏙 비엔나 120g*2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230125158386</td>\n","      <td>비비고 왕교자</td>\n","      <td>1.0</td>\n","      <td>9.348449</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230125</td>\n","      <td>N</td>\n","      <td>비비고 왕교자 1.05kg</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230126164638</td>\n","      <td>고메 바삭쫄깃한 탕수육</td>\n","      <td>1.0</td>\n","      <td>9.667259</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230126</td>\n","      <td>Y</td>\n","      <td>고메 바삭쫄깃한 탕수육 900g</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230125159705</td>\n","      <td>햇반 매일잡곡밥</td>\n","      <td>20.0</td>\n","      <td>9.994653</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230125</td>\n","      <td>Y</td>\n","      <td>햇반 매일잡곡밥210g</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>45870</th>\n","      <td>20230102972321</td>\n","      <td>고메 거멍 모짜체다핫도그</td>\n","      <td>1.0</td>\n","      <td>8.648397</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>20230102</td>\n","      <td>Y</td>\n","      <td>고메 거멍 모짜체다핫도그 340g</td>\n","    </tr>\n","    <tr>\n","      <th>45871</th>\n","      <td>20230102972720</td>\n","      <td>비비고 차돌된장찌개</td>\n","      <td>4.0</td>\n","      <td>9.639327</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230102</td>\n","      <td>N</td>\n","      <td>[앱전용특가]비비고 차돌된장찌개 460gX4개</td>\n","    </tr>\n","    <tr>\n","      <th>45872</th>\n","      <td>20230101964953</td>\n","      <td>비비고 차돌된장찌개</td>\n","      <td>4.0</td>\n","      <td>9.639327</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>N</td>\n","      <td>[앱전용특가]비비고 차돌된장찌개 460gX4개</td>\n","    </tr>\n","    <tr>\n","      <th>45873</th>\n","      <td>20230101970142</td>\n","      <td>고메 플랜테이블 함박스테이크</td>\n","      <td>1.0</td>\n","      <td>7.939872</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>20230101</td>\n","      <td>Y</td>\n","      <td>[식물성]고메 플랜테이블 함박스테이크 150g</td>\n","    </tr>\n","    <tr>\n","      <th>45874</th>\n","      <td>20230101966180</td>\n","      <td>리턴업 전립소 쏘팔메토 골드</td>\n","      <td>2.0</td>\n","      <td>10.406140</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>Y</td>\n","      <td>리턴업 전립소 쏘팔메토 골드 1000mgX60캡슐(2개월)</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>45875 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2234b71-c677-497c-84a2-5f46f31a7ebb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b2234b71-c677-497c-84a2-5f46f31a7ebb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b2234b71-c677-497c-84a2-5f46f31a7ebb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"vg6Qr-tWRWNw"},"source":["#### **1. 주류/비주류 처리**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u5o_43t_RVfL"},"outputs":[],"source":["# 은서언니가 한거에서 내가 확정지은거\n","exclude_words =['비비고','고메','밸런스밀','햇반','맥스봉','더건강한',  '행복한콩','밀당의고수','토종김','즐거운동행','크레잇','스팸', '육공육','삼호','명가','햄스빌','미정당','맛밤','주부초밥왕',\n","'쁘띠첼','플랜테이블','톡톡까먹어밤','쿡킷','쿠캣','딜라이트','주부유부왕', '밥이랑','그레인보울','밀키트','비요뜨','옥사부반점','계절밥상','VIPS','비엔나','우동','곰탕','우엉','깐메추리알','간짜장',\n","'동치미','도시락','쌀국수','새우까스','햄','돈까스', '만두', '단무지', '두부', '갈비탕', '소바', '너겟', '생면', '소시지', '바삭칩', '너비아니', '해쉬브라운', '당면', '사천마라탕면', '후랑크', \n","'야채고기말이', '스파게티', '파스타', '닭갈비','쌈무', '가쓰오','치킨', '단무지', '견과','냉동감자','포켓팝콘','그릴스모크','소면','냉면','찹스테이크','쯔란갈비',\n","'새우튀김','불고기','동그랑땡','칼국수','아이스크림','중면','대란','윙봉','볶음밥','피자','폭립','파히타','감바스','고르곤졸라','멕시칸타코','밀키트','선물','특별한선택','최고의선택']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1685598488766,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"foW0gn-MRhEr","outputId":"6a096159-f1c4-4c4d-9bc0-322473855884"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([    0,    20,    23,    27,    47,    48,    51,    53,    56,\n","               59,\n","            ...\n","            45762, 45773, 45776, 45777, 45793, 45804, 45812, 45854, 45869,\n","            45874],\n","           dtype='int64', length=5645)"]},"metadata":{},"execution_count":18}],"source":["#'선물','특별한선택','최고의선택'\n","### 스파게티소스, 파스타소스, 돈까스 소스 인덱스 따로 저장\n","non_main_index1 = data[~data['product_realname'].str.contains('|'.join(exclude_words))].index\n","non_main_index2 = data[data['product_realname'].str.contains('|'.join(['스파게티소스','파스타소스', '돈까스 소스']))].index\n","non_main_index = non_main_index1.union(non_main_index2)\n","non_main_index "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tgCtTzrzRqgI"},"outputs":[],"source":["non_main= data[~data['product_realname'].str.contains('|'.join(exclude_words))]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_XdTKjOeRtF2"},"outputs":[],"source":["data.loc[non_main_index, 'non_main_yn'] = 1\n","data['non_main_yn'] =data['non_main_yn'].fillna(0)"]},{"cell_type":"markdown","metadata":{"id":"OBXaef6pRiY5"},"source":["#### **2. 데이터 추가 처리**"]},{"cell_type":"markdown","metadata":{"id":"2mz0BP3zRztj"},"source":["**2-1. 임직원/비임직원 데이터 구분**\n","-이거 뒤에서 어차피 해서 삭제하면될듯"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u5enTmcqR121"},"outputs":[],"source":["# # 임직원\n","# employee_data = data[data['employee_yn']==\"Y\"]\n","\n","# # 비임직원\n","# n_employee_data = data[data['employee_yn']==\"N\"]"]},{"cell_type":"markdown","metadata":{"id":"VoERINXuR4wr"},"source":["**2-2. 일자 datetime화**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ojxhKsM7R9_0"},"outputs":[],"source":["# 일자\n","data['order_date']=pd.to_datetime(data['order_date'].astype(str), format='%Y%m%d')"]},{"cell_type":"markdown","metadata":{"id":"-Tw4MBYqSAU9"},"source":["#### **3. 이벤트 처리**"]},{"cell_type":"markdown","metadata":{"id":"Facktq4oSLBk"},"source":["**3-1. 이벤트 기간**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L7qh2NjETEy_"},"outputs":[],"source":["data['event_yn']=0\n","data.loc[(data['order_date'] >= '2023-01-01') & (data['order_date']<='2023-01-11'),'event_yn']=1"]},{"cell_type":"markdown","metadata":{"id":"-V3kK-qhTJYp"},"source":["**3-2. 상품명**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Y213ztnsSEo9"},"outputs":[],"source":["# 상품명으로 event 칼럼 넣기  \n","# 설사원은 임직원 event 칼럼 삭제할거라 고려하지 않아도됨.\n","event_index = data[data['product_realname'].str.contains('|'.join(['설선물']))].index\n","data.loc[event_index, 'event_yn'] = 1"]},{"cell_type":"markdown","metadata":{"id":"jfh1oJWzSNLj"},"source":["**3-2. 앱전용특가**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SGjeHUlGSOGr"},"outputs":[],"source":["app_index= data[data['product_realname'].str.contains('앱전용특가')].index\n","data.loc[app_index, 'app_yn'] = 1\n","data['app_yn'] =data['app_yn'].fillna(0)"]},{"cell_type":"markdown","metadata":{"id":"OndmiHaxSRUQ"},"source":["**3-3. 패밀리데이**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AJe4MxJqSSWQ"},"outputs":[],"source":["family_index= data[data['product_realname'].str.contains('패밀리데이')].index\n","data.loc[family_index, 'family_yn'] = 1\n","data['family_yn'] =data['family_yn'].fillna(0)"]},{"cell_type":"markdown","metadata":{"id":"nOoudfn-SVKk"},"source":["**3-4. 한정**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VrWHOQrpSW6X"},"outputs":[],"source":["limited_index= data[data['product_realname'].str.contains('한정')].index\n","data.loc[limited_index, 'limited_yn'] = 1\n","data['limited_yn'] =data['limited_yn'].fillna(0)"]},{"cell_type":"markdown","metadata":{"id":"AFV8taMYUAfZ"},"source":["**3-5. 설선물/생일 선물**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WcdjPQoCUBky"},"outputs":[],"source":["# 임직원 -> 설사원\n","empseol_index= data[data['product_realname'].str.contains('설사원')].index\n","data.loc[empseol_index, 'empseol_yn'] = 1\n","data['empseol_yn'] =data['empseol_yn'].fillna(0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j6UAw2jMUJj1"},"outputs":[],"source":["# 임직원 -> 생일선물\n","birthday_index= data[data['product_realname'].str.contains('생일 선물')].index\n","data.loc[birthday_index, 'birthday_yn'] = 1\n","data['birthday_yn'] =data['birthday_yn'].fillna(0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pqHDD-DyULCJ"},"outputs":[],"source":["# 비임직원 -> 설선물\n","seol_index= data[data['product_realname'].str.contains('설선물')].index\n","data.loc[seol_index, 'seol_yn'] = 1\n","data['seol_yn'] =data['seol_yn'].fillna(0)"]},{"cell_type":"markdown","metadata":{"id":"hxsCsenFUOnr"},"source":["#### **4. 주문번호 카테고리화**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D_yERtWPUQgM"},"outputs":[],"source":["data['net_order_type'] = data.groupby('scd')['scd'].transform('size')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1685598488780,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"id":"_diU6cYHUSjE","outputId":"1d48f2ca-eb57-46cc-96c4-ce60da394b0d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd gender  age_grp  net_order_qty  net_order_amt  \\\n","0      20230101963226      M        3           52.0      39.433806   \n","1      20230101963235      F        4            2.0      19.234566   \n","2      20230101963244      F        4            6.0      10.234373   \n","3      20230101963247      M        3           10.0      45.516855   \n","4      20230101963251      F        3           48.0      10.845621   \n","...               ...    ...      ...            ...            ...   \n","10648  20230131216756      F        4            3.0      18.314758   \n","10649  20230131216771      F        4            2.0       9.125762   \n","10650  20230131216842      M        3           24.0      10.176411   \n","10651  20230131216844      F        4           11.0      44.927942   \n","10652  20230131216857      M        5           30.0      43.364081   \n","\n","      employee_yn order_date prime_yn  non_main_yn  net_order_type  app_yn  \\\n","0               Y 2023-01-01        N          0.0               4     0.0   \n","1               Y 2023-01-01        Y          0.0               2     0.0   \n","2               N 2023-01-01        Y          0.0               1     0.0   \n","3               Y 2023-01-01        Y          0.0               5     0.0   \n","4               Y 2023-01-01        Y          1.0               1     0.0   \n","...           ...        ...      ...          ...             ...     ...   \n","10648           N 2023-01-31        N          0.0               2     0.0   \n","10649           N 2023-01-31        Y          0.0               1     0.0   \n","10650           N 2023-01-31        N          0.0               1     0.0   \n","10651           N 2023-01-31        N          2.0               5     0.0   \n","10652           Y 2023-01-31        Y          2.0               5     0.0   \n","\n","       family_yn  limited_yn  birthday_yn  seol_yn  empseol_yn  event_yn  \n","0            0.0         0.0          0.0      0.0         0.0         1  \n","1            0.0         0.0          0.0      0.0         2.0         1  \n","2            0.0         0.0          0.0      0.0         0.0         1  \n","3            0.0         0.0          0.0      0.0         0.0         1  \n","4            0.0         0.0          0.0      0.0         0.0         1  \n","...          ...         ...          ...      ...         ...       ...  \n","10648        0.0         0.0          0.0      0.0         0.0         0  \n","10649        0.0         0.0          0.0      0.0         0.0         0  \n","10650        0.0         0.0          0.0      0.0         0.0         0  \n","10651        0.0         0.0          0.0      0.0         0.0         0  \n","10652        0.0         0.0          0.0      0.0         0.0         0  \n","\n","[10653 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-ff0b2773-355b-43b4-b1aa-d88cf4620acd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>prime_yn</th>\n","      <th>non_main_yn</th>\n","      <th>net_order_type</th>\n","      <th>app_yn</th>\n","      <th>family_yn</th>\n","      <th>limited_yn</th>\n","      <th>birthday_yn</th>\n","      <th>seol_yn</th>\n","      <th>empseol_yn</th>\n","      <th>event_yn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101963226</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>52.0</td>\n","      <td>39.433806</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101963235</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>2.0</td>\n","      <td>19.234566</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>Y</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101963244</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>6.0</td>\n","      <td>10.234373</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>Y</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230101963247</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>10.0</td>\n","      <td>45.516855</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>Y</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101963251</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>48.0</td>\n","      <td>10.845621</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>Y</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10648</th>\n","      <td>20230131216756</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>18.314758</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10649</th>\n","      <td>20230131216771</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>2.0</td>\n","      <td>9.125762</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>Y</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10650</th>\n","      <td>20230131216842</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>24.0</td>\n","      <td>10.176411</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>N</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10651</th>\n","      <td>20230131216844</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>11.0</td>\n","      <td>44.927942</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>N</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10652</th>\n","      <td>20230131216857</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>30.0</td>\n","      <td>43.364081</td>\n","      <td>Y</td>\n","      <td>2023-01-31</td>\n","      <td>Y</td>\n","      <td>2.0</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10653 rows × 17 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff0b2773-355b-43b4-b1aa-d88cf4620acd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ff0b2773-355b-43b4-b1aa-d88cf4620acd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ff0b2773-355b-43b4-b1aa-d88cf4620acd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}],"source":["group_data = data.groupby('scd').agg({'gender': 'first', 'age_grp': 'first', 'net_order_qty' : 'sum',\n","                                      'net_order_amt': 'sum','employee_yn':'first',\n","                                      'order_date':'first','prime_yn':'first',\t'non_main_yn':'sum','net_order_type':'first',\n","                                      'app_yn':'sum','family_yn':'sum','limited_yn':'sum',\n","                                      'birthday_yn':'sum','seol_yn':'sum','empseol_yn':'sum','event_yn':'first',\n","                                      \n","                                      }).reset_index()\n","group_data"]},{"cell_type":"markdown","metadata":{"id":"0BSxwiFWUVeH"},"source":["#### **5. 주류/비주류 데이터 처리**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Zs5jALIAUXOU"},"outputs":[],"source":["group_data[group_data['non_main_yn'] >=1]\n","#10653명 중에 3953명이 비주류를 구매하였다.절반 이하.. 비율로 가야함.\n","group_data['non_main_yn'] = group_data['non_main_yn'] / group_data['net_order_type']"]},{"cell_type":"markdown","metadata":{"id":"D6FcVdvkU4TS"},"source":["#### **6. 인코딩**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bjWUKVRSVEOM"},"outputs":[],"source":["group_data = pd.get_dummies(group_data, columns=['age_grp'], prefix=['age_grp'])\n","\n","from sklearn.preprocessing import LabelEncoder\n","label_encoder = LabelEncoder()\n","\n","# group_data['gender'] = label_encoder.fit_transform(group_data['gender'])\n","group_data['prime_yn'] = label_encoder.fit_transform(group_data['prime_yn'])"]},{"cell_type":"markdown","source":["- 스케일링 안하는 것이 더 성능 잘나옴"],"metadata":{"id":"zL1dcvn-_Zam"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"scDiRl6BVGi0"},"outputs":[],"source":["# 열의 값 빈도 계산\n","frequency_encoding = group_data['gender'].value_counts(normalize=True).to_dict()\n","\n","# 열의 빈도 인코딩 값 추가\n","group_data['gender_freq_enc'] = group_data['gender'].map(frequency_encoding)"]},{"cell_type":"markdown","metadata":{"id":"kJnL8XZMVJwI"},"source":["#### **7. 임직원/비임직원 분리**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Unk1Z9brVLMS"},"outputs":[],"source":["# 임직원\n","employee_data = group_data[group_data['employee_yn']=='Y']\n","# 비임직원- 일반회원\n","n_employee_data = group_data[group_data['employee_yn']=='N']"]},{"cell_type":"markdown","metadata":{"id":"KvEomAT7Q4jn"},"source":["### **모델링**"]},{"cell_type":"markdown","metadata":{"id":"PON0t07IVOEc"},"source":["#### **1. 비임직원**"]},{"cell_type":"markdown","metadata":{"id":"kJrNFBVBVUOD"},"source":["**xgboost**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8RaGWebjQ4J8"},"outputs":[],"source":["n_X = n_employee_data.drop(['prime_yn','order_date','scd','family_yn','birthday_yn','employee_yn','empseol_yn','gender'], axis=1)\n","n_y = n_employee_data['prime_yn']"]},{"cell_type":"code","source":["# from sklearn.model_selection import train_test_split\n","# n_X_train, n_X_test, n_y_train, n_y_test = train_test_split(n_X,n_y,test_size=0.2, random_state=42)"],"metadata":{"id":"UItkINUldSy_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import xgboost as xgb\n","# from sklearn.model_selection import GridSearchCV\n","# from sklearn.metrics import f1_score, make_scorer\n","\n","# n_xgb_clf = xgb.XGBClassifier()\n","\n","# param_grid = {\n","#     'max_depth': [4],\n","#     'learning_rate': [0.7],\n","#     'n_estimators': [700],\n","#     'subsample': [0.8],\n","#     'colsample_bytree': [0.8],\n","#     'gamma': [0.1]\n","# }\n","\n","# scorer = make_scorer(f1_score)\n","# grid_search = GridSearchCV(n_xgb_clf, param_grid, scoring=scorer, cv=5)\n","# grid_search.fit(n_X, n_y)\n","\n","# # 최적의 하이퍼파라미터와 그 때의 평가 지표 출력\n","# print(\"Best Parameters:\", grid_search.best_params_)\n","# print(\"Best F1 Score:\", grid_search.best_score_)"],"metadata":{"id":"rM0ZUgJt7WV8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#뒤에 코드랑 똒같애\n","# import xgboost as xgb\n","# n_xgb_clf = xgb.XGBClassifier(learning_rate=0.7, max_depth=4, n_estimators=700, subsample=0.8, colsample_bytree=0.8, gamma=0.1)"],"metadata":{"id":"CNlrFYBQcjPp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.metrics import f1_score, make_scorer\n","from sklearn.model_selection import cross_val_score\n","\n","# Assuming you have your features and target variables defined as X and y\n","\n","# Create an XGBoost classifier with your desired parameters\n","n_xgb_clf = xgb.XGBClassifier(learning_rate=0.7, max_depth=4, n_estimators=700, subsample=0.8, colsample_bytree=0.8, gamma=0.1)\n","\n","# Perform cross-validation and compute the accuracy\n","scorer = make_scorer(f1_score)\n","scores = cross_val_score(n_xgb_clf, n_X, n_y, cv=5, scoring= scorer)\n","\n","best_score = max(scores)\n","print(\"Best F1 score:\", best_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IFZAhs2b02vE","executionInfo":{"status":"ok","timestamp":1685598500879,"user_tz":-540,"elapsed":11037,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"ee8387e5-6e92-45d2-828d-cc5116044c48"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best F1 score: 0.5808257522743177\n"]}]},{"cell_type":"code","source":["scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E7o1AwSL8fKK","executionInfo":{"status":"ok","timestamp":1685598500879,"user_tz":-540,"elapsed":12,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"4e376a7d-56aa-4ae2-f796-90c52d2fc913"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.58082575, 0.53250774, 0.50539957, 0.55139289, 0.50515464])"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["- learning_rate=0.8, max_depth=4, n_estimators=700, subsample=0.8\n","  - Best F1 score: 0.5572354211663066 (cv=5)\n","- **learning_rate=0.7**, max_depth=4, **n_estimators=600**, subsample=0.8 \n","  - Best F1 score: 0.5772298767222626 (cv=5)\n","- learning_rate=0.7, max_depth=4, n_estimators=600, subsample=0.8, **colsample_bytree=0.8**, **gamma=0.1**\n","  - Best F1 score: 0.5772759350741001 (cv=5)\n","- learning_rate=0.7, max_depth=4, n_estimators=600, subsample=0.8, **colsample_bytree=0.9**, gamma=0.1\n","  - Best F1 score: 0.5718349928876245 (cv=5)\n","- learning_rate=0.7, max_depth=4, n_estimators=600, subsample=0.8, colsample_bytree=0.8, **gamma=0.2**\n","  - Best F1 score: 0.5765895953757225 (cv=5)\n","- learning_rate=0.7, max_depth=4, **n_estimators=700**, subsample=0.8, colsample_bytree=0.8, gamma=0.1\n","  - **Best F1 score: 0.5808257522743177** (cv=5)\n","  - Best F1 score: 0.5706093189964158 (Standardization)\n","  - Best F1 score: 0.5634408602150538 (Min-Max scaler)\n","  - Best F1 score: 0.5517241379310345 (net_order_qty 제외)\n","- learning_rate=0.7, max_depth=4, n_estimators=700, subsample=0.8, colsample_bytree=0.8, gamma=0.1, **reg_alpha = 0.1**\n","  - Best F1 score: 0.5562043795620438 (cv=5)\n","- learning_rate=0.7, max_depth=4, n_estimators=700, subsample=0.8, colsample_bytree=0.8, gamma=0.1, **reg_alpha = 0.01**\n","  - Best F1 score: 0.5771715721464465 (cv=5)\n","- learning_rate=0.7, max_depth=4, n_estimators=700, subsample=0.8, colsample_bytree=0.8, gamma=0.1, **min_child_weight = 1**\n","  - Best F1 score: 0.5808257522743177 (cv=5)"],"metadata":{"id":"VY5Z4jNu249Z"}},{"cell_type":"markdown","source":["#### **2. 임직원**"],"metadata":{"id":"cAXiAYA8AALq"}},{"cell_type":"code","source":["X = employee_data.drop(['prime_yn','order_date','scd', 'employee_yn', 'gender'], axis=1)\n","y = employee_data['prime_yn']"],"metadata":{"id":"KYZxA-FlALvx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# X_train,X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=42)"],"metadata":{"id":"8uWLd04-dVty"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import xgboost as xgb\n","# from sklearn.model_selection import GridSearchCV\n","# from sklearn.metrics import f1_score, make_scorer\n","\n","# xgb_clf = xgb.XGBClassifier()\n","\n","# param_grid = {\n","#     'max_depth': [1, 2, 3],\n","#     'learning_rate': [0.2, 0.3],\n","#     'n_estimators': [10, 50, 100]\n","# }\n","\n","# scorer = make_scorer(f1_score)\n","# grid_search = GridSearchCV(xgb_clf, param_grid, scoring=scorer, cv=5)\n","# grid_search.fit(X, y)\n","\n","# # 최적의 하이퍼파라미터와 그 때의 평가 지표 출력\n","# print(\"Best Parameters:\", grid_search.best_params_)\n","# print(\"Best F1 Score:\", grid_search.best_score_)"],"metadata":{"id":"2jwlUDQZBB4G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.metrics import f1_score, make_scorer\n","from sklearn.model_selection import cross_val_score\n","\n","# Assuming you have your features and target variables defined as X and y\n","\n","# Create an XGBoost classifier with your desired parameters\n","xgb_clf = xgb.XGBClassifier(learning_rate=0.1, max_depth=1, n_estimators=10, subsample=0.7, colsample_bytree=0.8, gamma=0.1)\n","\n","# Perform cross-validation and compute the accuracy\n","scorer = make_scorer(f1_score)\n","scores = cross_val_score(xgb_clf, X, y, cv=10, scoring= scorer)\n","\n","best_score = max(scores)\n","print(\"Best F1 score:\", best_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ED5Ne7YEAk2Q","executionInfo":{"status":"ok","timestamp":1685598500880,"user_tz":-540,"elapsed":8,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"8a6429a3-6bb6-4521-8592-bc2ac12c3758"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Best F1 score: 0.7510791366906476\n"]}]},{"cell_type":"markdown","source":["- learning_rate=0.2, max_depth=1, n_estimators=100\n","  - Best F1 score: 0.7443881245474293 (cv=5)\n","- learning_rate=0.2, **max_depth=10**, n_estimators=100\n","  - Best F1 score: 0.7263922518159807 (cv=5)\n","- learning_rate=0.2, max_depth=1, **n_estimators=10**\n","  - Best F1 score: 0.7506631299734747 (cv=5)\n","- learning_rate=0.2, max_depth=1, n_estimators=10, **subsample=0.8, colsample_bytree=0.8, gamma=0.1**\n","  - Best F1 score: 0.7496688741721853 (cv=10)\n","- learning_rate=0.2, max_depth=1, n_estimators=10, **subsample=0.7**, colsample_bytree=0.8, gamma=0.1\n","  - Best F1 score: 0.748482805124747 (cv=5)\n","  - Best F1 score: 0.7506631299734747 (cv=10)\n","-learning_rate=0.2, max_depth=1, n_estimators=10, subsample=0.7, colsample_bytree=0.8, **gamma=0.2**\n","  - Best F1 score: 0.7506631299734747 (cv=10)\n","- **learning_rate=0.1**, max_depth=1, n_estimators=10, subsample=0.7, colsample_bytree=0.8, gamma=0.1\n","  - Best F1 score: 0.7510791366906476 (cv=10)"],"metadata":{"id":"OM9SmnmdDvOm"}},{"cell_type":"markdown","source":[],"metadata":{"id":"mCQBP9eVK1iy"}},{"cell_type":"markdown","source":["## bda test데이터로 확인"],"metadata":{"id":"FeItGpd-xQwa"}},{"cell_type":"markdown","metadata":{"id":"ryVS6I4wpHwF"},"source":["### **total_count 전처리**"]},{"cell_type":"markdown","metadata":{"id":"zGhjfREXpHwG"},"source":["#### **(완료) 1. 한정/임직원/이벤트 정보 추출**\n","- product_name에서 [] 안에 들어있는 ~개 한정, 임직원 등의 데이터 사전 제거\n","   - 문제점1: []가 두번 들어가있는 경우 한번만 추출됨 (해결)\n","   - 문제점2: [1000개한정미정당 오류 (해결)\n","- 이후 product_info에 해당 정보 넣어주고 product_name에서는 product_info 내용 지워주기"]},{"cell_type":"code","source":["encoding='UTF-8'\n","test_data=pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/data/tmk_bda_test.csv', index_col=0)\n","test_data=test_data.drop('prime_yn',axis=1)"],"metadata":{"id":"mJwlG5fDqUwJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"l4bh-Usv0vxE","executionInfo":{"status":"ok","timestamp":1685598502068,"user_tz":-540,"elapsed":18,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"6742ac26-4be5-40b8-e4ae-6ae432f99364"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd                product_name  net_order_qty  \\\n","45875  20230101964282             비비고 스팸부대찌개 460g              1   \n","45876  20230101970142            삼호 생선살어묵 야채 200g              1   \n","45877  20230101965237            크레잇 블랙페퍼 폭찹 스테이크              1   \n","45878  20230102973798            비비고 소고기 미역국 500g              3   \n","45879  20230101965633            비비고 소고기 미역국 500g              2   \n","...               ...                         ...            ...   \n","65530  20230103986821                 비비고 찐만두168g              1   \n","65531  20230102979023  사골곰탕 한 그릇 100g (1-2인분X5개입)              1   \n","65532  20230103989581       쁘띠첼 자몽상큼함듬뿍워터젤리 130ml             10   \n","65533  20230104999357          비비고 언양식 바싹불고기 460g              1   \n","65534  20230103989710                고메 중화짬뽕 652g              1   \n","\n","       net_order_amt gender  age_grp employee_yn  order_date  \n","45875       8.161946      M        4           N    20230101  \n","45876       8.098947      M        4           Y    20230101  \n","45877       8.277412      F        4           N    20230101  \n","45878       9.145375      F        3           N    20230102  \n","45879       8.613230      F        3           N    20230101  \n","...              ...    ...      ...         ...         ...  \n","65530       7.930566      M        5           Y    20230103  \n","65531       8.477412      F        3           Y    20230102  \n","65532       9.421249      F        3           Y    20230103  \n","65533       8.594895      M        4           N    20230104  \n","65534       8.462103      M        3           N    20230103  \n","\n","[19660 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-c610bca8-9e98-4211-94a2-c261cb022fc1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>45875</th>\n","      <td>20230101964282</td>\n","      <td>비비고 스팸부대찌개 460g</td>\n","      <td>1</td>\n","      <td>8.161946</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>45876</th>\n","      <td>20230101970142</td>\n","      <td>삼호 생선살어묵 야채 200g</td>\n","      <td>1</td>\n","      <td>8.098947</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>45877</th>\n","      <td>20230101965237</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>1</td>\n","      <td>8.277412</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>45878</th>\n","      <td>20230102973798</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>3</td>\n","      <td>9.145375</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230102</td>\n","    </tr>\n","    <tr>\n","      <th>45879</th>\n","      <td>20230101965633</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>2</td>\n","      <td>8.613230</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>65530</th>\n","      <td>20230103986821</td>\n","      <td>비비고 찐만두168g</td>\n","      <td>1</td>\n","      <td>7.930566</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","    </tr>\n","    <tr>\n","      <th>65531</th>\n","      <td>20230102979023</td>\n","      <td>사골곰탕 한 그릇 100g (1-2인분X5개입)</td>\n","      <td>1</td>\n","      <td>8.477412</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230102</td>\n","    </tr>\n","    <tr>\n","      <th>65532</th>\n","      <td>20230103989581</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리 130ml</td>\n","      <td>10</td>\n","      <td>9.421249</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","    </tr>\n","    <tr>\n","      <th>65533</th>\n","      <td>20230104999357</td>\n","      <td>비비고 언양식 바싹불고기 460g</td>\n","      <td>1</td>\n","      <td>8.594895</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230104</td>\n","    </tr>\n","    <tr>\n","      <th>65534</th>\n","      <td>20230103989710</td>\n","      <td>고메 중화짬뽕 652g</td>\n","      <td>1</td>\n","      <td>8.462103</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230103</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19660 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c610bca8-9e98-4211-94a2-c261cb022fc1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c610bca8-9e98-4211-94a2-c261cb022fc1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c610bca8-9e98-4211-94a2-c261cb022fc1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1685598502068,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"8ad7e289-b9fb-4f68-d8ee-baefa0409d6c","id":"kqBumAgKpHwH"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-49-b9477ed24f19>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(r'\\[1000개한정미정당', '').str.strip()\n"]}],"source":["# Extract the information within square brackets and store it in 'product_info' column\n","test_data['product_info'] = test_data['product_name'].str.findall(r'\\[(.*?)\\]')\n","\n","# Convert the extracted information to a string\n","test_data['product_info'] = test_data['product_info'].apply(lambda x: ', '.join(x) if x else '')\n","\n","# Extract the exact phrase '[1000개한정미정당' from 'product_name' and store it in 'product_info'\n","test_data.loc[test_data['product_name'].str.contains(r'\\[1000개한정미정당'), 'product_info'] = '[1000개한정미정당'\n","\n","# Exclude the 'product_info' from 'product_name'\n","test_data['product_name'] = test_data.apply(lambda x: re.sub(r'\\[(.*?)\\]', '', x['product_name']).strip(), axis=1)\n","\n","# Remove the exact phrase '[1000개한정미정당' from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(r'\\[1000개한정미정당', '').str.strip()\n","\n","# Remove any extra spaces resulting from the replacement\n","test_data['product_name'] = test_data['product_name'].str.strip()"]},{"cell_type":"markdown","metadata":{"id":"QivsvB_vpHwI"},"source":["#### **(완료) 2. 용량 데이터 추출** <br/>\n","g, G, kg, KG, ml, L 등이 포함된 용량 데이터 추출 후 product_name에서는 제거\n","- 용량이 두 가지 이상일 경우 ,로 이어서 모두 추출할 수 있게 함"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1037,"status":"ok","timestamp":1685598503095,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"613e3591-96c1-41fa-84dc-01c926c0dfde","id":"lL0N12aipHwI"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-50-f6cd77c29bf9>:12: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(pattern_gram, '')\n"]}],"source":["import pandas as pd\n","import re\n","\n","# Define a regular expression pattern to extract the desired information without unnecessary characters\n","pattern_gram = r'(\\d+(?:\\.\\d+)?\\s*[gGmMlLkK]+)'\n","\n","# Extract the quantity information from 'product_name' column using regular expressions\n","test_data['product_gram'] = test_data['product_name'].str.extractall(pattern_gram, flags=re.IGNORECASE).groupby(level=0).agg(','.join)\n","test_data['product_gram'] = test_data['product_gram'].str.strip()\n","\n","# Remove the extracted quantity information from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(pattern_gram, '')\n","\n","# Remove any extra spaces resulting from the replacement\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"4MTw0T7IpHwJ"},"source":["**용량 데이터 관련 문제점** <br/>\n","용량은 사실 사용하지 않을 가능성이 높아서 다음과 같은 1, 2개 정도의 오차는 배제함\n","- 어떤 g들이 추출이 안되는 문제 발생 (해결)\n","- **ex1. '비비고 고등어구이 60g+소스15g'처럼  추가적인 판단이 필요한 애매한 경우 존재**\n","- **ex2. (냉동) 비비고 테이블 특설렁탕 700x3개+(냉동) 비비고 테이블 특양지곰탕 700gx3개처럼 오타로 인해 추출 안되는 경우도 존재**\n","  - 아이시스 8.0 ECO 무라벨 300펫 80입_패밀리데이: 'ml'가 '펫'으로 들어가있는 문제\n","- **ex3. The 더건강한 닭가슴살 통살 1000g(100g*10)(유통기한23.02.19까지)처럼 동일한 용량을 중복해서 표시하는 경우 존재**"]},{"cell_type":"markdown","metadata":{"id":"I19jPVlipHwJ"},"source":["#### **(완료) 3. 수량 데이터 추출** <br/>\n","입, 개, 묶음, box, 번들, 캔이 포함된 수량 데이터를 추출하는 코드\n","- 입, 개, 묶음, box, 번들, 캔을 기준으로 추출한 후 숫자만 남기고 한글은 지움\n","- 이후 product_name에서 제거"]},{"cell_type":"markdown","metadata":{"id":"1e0N_ovbpHwJ"},"source":["**수량 데이터 추출 관련 수정사항 (0525)**\n","- 개입, EA, 종, 묶음 등을 수량에 반영하는 것이 의미가 없음\n","  - 우리가 처음에 수량 데이터를 추출하려고 한건, net_order_qty를 올바르게 해석하기 위함\n","  - 패키지 구성품이 몇 개 들어있는지는 우리가 원하는 수량이 아님\n","  - ex1. 20개의 소세지가 들어있는 맥스봉 소세지 상품 1개를 구매한걸 20개를 구매했다고 보기에는 무리가 있음\n","  - ex2. 5개의 사골곰탕이 들어있는 사골곰탕 패키지 1개를 구매한걸 5개를 구매했다고 간주하기에는 무리가 있음\n","- **입, 개, 캔, *2, X2, 번들**이 수량과 직접적인 연관이 있는 키워드\n","  - 양념은 약간 애매하긴 한데 하나 단위로도 판매하기 때문에 번들도 수량에 포함시키는게 맞다고 판단\n","  - 묶음은 굳이? 12입(6입x묶음)처럼 동일한 수량을 다시 한번 적은 경우가 많음\n","- () 안에 필요한 수량 정보가 들어가있는 경우도 있고, 아닌 경우도 있기 때문에 수량 선처리 후 () 처리"]},{"cell_type":"markdown","metadata":{"id":"Mc9yQSXspHwJ"},"source":["**3-1. 수량 사전 작업 (1) - 개입/인분**\n","- 개까지 포함해서 추출되는 문제 때문에 개입만 따로 정규표현식 사용하여 추출\n","- 인, 인분 같이 넣으면 처리가 잘 안되어서 분리"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":41,"status":"ok","timestamp":1685598503096,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"c1e53cf3-494a-4aaf-d98e-a484e8844b02","id":"B_Fa8RUZpHwK"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-51-fd6bd8999c9a>:14: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(pattern_count1, '')\n"]}],"source":["import pandas as pd\n","import re\n","\n","# Define the regular expression pattern to extract the desired information\n","pattern_count1 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*(?:개입|인분))'\n","\n","# Extract the product_count1 information from 'product_name' column using regular expressions\n","test_data['product_count1'] = test_data['product_name'].str.extract(pattern_count1, flags=re.IGNORECASE)\n","\n","# Convert the extracted product_count1 information to a string\n","test_data['product_count1'] = test_data['product_count1'].astype(str)\n","\n","# Remove the extracted product_count1 information from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(pattern_count1, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"YhSx9_ROpHwK"},"source":["**3-2. 수량 사전 작업 (2) - 인/EA/종/묶음/캡슐/포/정/구/매 추출** <br/>\n","필요 없는 숫자 데이터이므로 추출 후 삭제\n","- 문제점1: 5 EA 등 띄어쓰기 포함된 경우는 추출 안됨 (해결)\n","- 문제점2: ea 소문자 추출 안됨 (해결)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":38,"status":"ok","timestamp":1685598503097,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"2b19dba5-b0d2-4477-b49d-37cc7d8c46a5","id":"75QZyhvXpHwK"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-52-ebc5fdd6a90b>:6: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(pattern_count2, '')\n"]}],"source":["# Extract all matching quantities from 'product_name' column using regular expressions\n","pattern_count2 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*(?:\\s?(?:인|EA|ea|종|묶음|캡슐|포|정|구|매)))'\n","test_data['product_count2'] = test_data['product_name'].str.extract(pattern_count2, flags=re.IGNORECASE)\n","\n","# Remove the extracted 'number + EA', 'number + 종', 'number + 묶음' from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(pattern_count2, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"biHtDN1lpHwL"},"source":["**3-3. 수량 처리 - 팩/개/번들/캔 추출** <br/>\n","필요한 데이터이므로 추출 후 숫자 제외하고 문자는 날리기\n","- 두 가지 이상일 경우 ,로 이어서 모두 추출할 수 있게 함"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6JWlqLQwpHwL"},"outputs":[],"source":["# Define a regular expression pattern to extract the desired information\n","pattern_count = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*[~팩개번들캔])'\n","\n","# Extract all matching quantities from 'product_name' column using regular expressions\n","test_data['product_count'] = test_data['product_name'].str.findall(pattern_count, flags=re.UNICODE)\n","\n","# Remove the product_count part from product_name\n","test_data['product_name'] = test_data['product_name'].str.replace(pattern_count, '', regex=True)\n","\n","# Strip any leading or trailing whitespace from product_name column\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Update the product_count column to contain only numbers\n","test_data['product_count'] = test_data['product_count'].apply(lambda x: ','.join(re.findall(r'\\d+', ','.join(x))))\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"oWnDbi_bpHwL"},"source":["**3-4. 수량 사전 작업 (3)  - () 제거** <br/>\n","() 안에 있는 중복되는 수량 데이터를 사전 제거\n","- ex. 1box, 40입 (20입x2묶음) 등\n","- 추후 활용될 여지가 없는 데이터이므로 삭제"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0iQGfCsqpHwL"},"outputs":[],"source":["# Extract the information within Praenthesis and store it in 'product_info2' column\n","test_data['product_info2'] = test_data['product_name'].str.findall(r'\\((.*?)\\)')\n","\n","# Convert the extracted information to a string\n","test_data['product_info2'] = test_data['product_info2'].apply(lambda x: ', '.join(x) if x else '')\n","\n","# Exclude the 'product_info' from 'product_name'\n","test_data['product_name'] = test_data.apply(lambda x: re.sub(r'\\((.*?)\\)', '', x['product_name']).strip(), axis=1)\n","\n","# Remove any extra spaces resulting from the replacement\n","test_data['product_name'] = test_data['product_name'].str.strip()"]},{"cell_type":"markdown","metadata":{"id":"4t2WpMXVpHwM"},"source":["**3-5. 수량 2차 처리 - 입 추출** <Br/>\n","() 안에 같은 수량을 표시하는 입이 들어가는 문제 해결하기 위해 () 처리 후 추출\n","- 필요한 데이터이므로 숫자 제외 문자 날리기"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1685598503098,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"9c9a0573-f91f-4992-95a9-2abb70784220","id":"BXmwiYVRpHwM"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-55-a48d082903f3>:11: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(pattern_count3, '')\n"]}],"source":["# Define the regular expression pattern to extract the desired information\n","pattern_count3 = r'(\\d+(?:일|이|삼|사|오|육|칠|팔|구|십|백|천|만)*입)'\n","\n","# Extract the product_count3 information from 'product_name' column using regular expressions\n","test_data['product_count3'] = test_data['product_name'].str.extract(pattern_count3, flags=re.IGNORECASE)\n","\n","# Convert the extracted product_count3 information to a string\n","test_data['product_count3'] = test_data['product_count3'].astype(str)\n","\n","# Remove the extracted product_count3 information from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(pattern_count3, '')\n","\n","# Remove any extra spaces resulting from the replacements\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Replace the values in the product_count3 column containing 'x' with blanks\n","test_data['product_count3'] = test_data['product_count3'].replace('.*x.*', '', regex=True)\n","\n","# Update the product_count3 column to contain only numbers\n","test_data['product_count3'] = test_data['product_count3'].str.extract(r'(\\d+)')\n","\n","# Drop rows where 'product_count3' column is empty\n","test_data = test_data[test_data['product_count3'].str.strip().astype(bool)]\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"YXnckAqZpHwN"},"source":["**3-6. 수량 3차 처리 - *숫자, x숫자, X숫자 추출** <Br/>\n","*, x, X 뒤에 있는 데이터 모조리 긁어와서 숫자만 남기고 다 삭제하기\n","- '들'과 같이 추출 후 남은 데이터들 삭제해주기\n","- x가 여러 번 있는 경우 하나만 남고 뒤의 아예 정보가 사라져버려서 수정"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1685598503099,"user":{"displayName":"지연","userId":"04505810097762875151"},"user_tz":-540},"outputId":"1b09be34-db5c-4e48-a028-28ffc8fdc9ce","id":"mb4zZfvLpHwN"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-56-a8df11f0c118>:8: FutureWarning: The default value of regex will change from True to False in a future version.\n","  test_data['product_name'] = test_data['product_name'].str.replace(r'[xX*](?:\\+)?.{0,2}', '')\n"]}],"source":["# Extract up to two characters after 'x', 'X', or '*' from 'product_name' and store them in 'product_count4'\n","test_data['product_count4'] = test_data['product_name'].str.extract(r'[xX*](?:\\+)?(.{0,2})')\n","\n","# Remove any extra spaces resulting from the extraction\n","test_data['product_count4'] = test_data['product_count4'].str.strip()\n","\n","# Remove the extracted information from 'product_name'\n","test_data['product_name'] = test_data['product_name'].str.replace(r'[xX*](?:\\+)?.{0,2}', '')\n","\n","# Remove any extra spaces resulting from the replacement\n","test_data['product_name'] = test_data['product_name'].str.strip()\n","\n","# Reset the index of the data frame\n","test_data = test_data.reset_index(drop=True)"]},{"cell_type":"markdown","metadata":{"id":"YKglMBLXpHwN"},"source":["**(해결) 수량 데이터 관련 문제점**\n","- 문제점1: 2x2 등의 데이터가 추출이 안됨 (해결)\n","  - 동시에 추출해보려고 했는데 조건이 복잡해져서 오류가 뜸\n","  - x가 애매하게 추출된 경우는 전부 공백처리 하고, x가 들어간 숫자 데이터는 따로 처리한 후 합치는 방식 적용 \n","- 문제점2: 8번들X2개처럼 번들, 개가 둘다 들어있는 경우에 하나만 추출됨 (해결)\n","- 문제점3: product_info 뽑아내는 과정에서 [가 하나만 들어있는 데이터에서 오류 발생 (해결)"]},{"cell_type":"markdown","metadata":{"id":"ukgIKbsopHwO"},"source":["#### **(완료) 4. 최종 수량 데이터 생성** <br/>\n","- product_count는 두개 이상 추출된 경우 원래의 수량을 나타내게 함 (X 연산 적용)\n","- product_count, produt_count3, product_count4 모두 곱하기\n","- net_order_qty에 total_count 곱하기"]},{"cell_type":"markdown","metadata":{"id":"pOLDC5BgpHwO"},"source":["**4-1. product_count 곱연산**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dq-4CJZypHwP"},"outputs":[],"source":["# Multiply two numbers in product_count column\n","test_data['product_count'] = test_data['product_count'].apply(lambda x: str(int(x.split(',')[0]) * int(x.split(',')[1])) if ',' in x else x)"]},{"cell_type":"markdown","metadata":{"id":"nNYhWyztpHwP"},"source":["**4-2. product_count 하나로 합치기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DmgJ8nO9pHwQ"},"outputs":[],"source":["# Convert columns to numeric data type\n","test_data['product_count'] = pd.to_numeric(test_data['product_count'], errors='coerce')\n","test_data['product_count3'] = pd.to_numeric(test_data['product_count3'], errors='coerce')\n","test_data['product_count4'] = pd.to_numeric(test_data['product_count4'], errors='coerce')\n","\n","# Multiply the numeric columns and store the result in 'total_count'\n","test_data['total_count'] = (test_data['product_count'].fillna(1) * test_data['product_count3'].fillna(1) * test_data['product_count4'].fillna(1))"]},{"cell_type":"markdown","metadata":{"id":"ZIWeUUDnpHwQ"},"source":["**4-3. total_count와 net_order_qty 곱하기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TxmWY8UJpHwR"},"outputs":[],"source":["# Convert columns to numeric data type\n","test_data['total_count'] = pd.to_numeric(test_data['total_count'], errors='coerce')\n","test_data['net_order_qty'] = pd.to_numeric(test_data['net_order_qty'], errors='coerce')\n","\n","# Multiply the numeric columns and store the result in 'total_count'\n","test_data['net_order_qty'] = (test_data['net_order_qty'].fillna(1) * test_data['total_count'].fillna(1))"]},{"cell_type":"markdown","metadata":{"id":"tP7TvhmLpHwR"},"source":["#### **5. 임시 칼럼들 drop**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8AmhREGxpHwR"},"outputs":[],"source":["# info\n","test_data = test_data.drop(['product_info', 'product_info2'], axis=1)\n","\n","# gram\n","test_data = test_data.drop(['product_gram'], axis=1)\n","\n","# count\n","test_data = test_data.drop(['total_count', 'product_count', 'product_count1', 'product_count2', 'product_count3', 'product_count4'], axis=1)"]},{"cell_type":"code","source":["test_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"tTRgx-fJ1Wq6","executionInfo":{"status":"ok","timestamp":1685598503102,"user_tz":-540,"elapsed":30,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"a161a161-c0d2-46da-a895-55f2ba7ad3e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd      product_name  net_order_qty  net_order_amt gender  \\\n","0      20230101964282        비비고 스팸부대찌개            1.0       8.161946      M   \n","1      20230101970142       삼호 생선살어묵 야채            1.0       8.098947      M   \n","2      20230101965237  크레잇 블랙페퍼 폭찹 스테이크            1.0       8.277412      F   \n","3      20230102973798       비비고 소고기 미역국            3.0       9.145375      F   \n","4      20230101965633       비비고 소고기 미역국            2.0       8.613230      F   \n","...               ...               ...            ...            ...    ...   \n","19655  20230103986821           비비고 찐만두            1.0       7.930566      M   \n","19656  20230102979023         사골곰탕 한 그릇            1.0       8.477412      F   \n","19657  20230103989581   쁘띠첼 자몽상큼함듬뿍워터젤리           10.0       9.421249      F   \n","19658  20230104999357     비비고 언양식 바싹불고기            1.0       8.594895      M   \n","19659  20230103989710           고메 중화짬뽕            1.0       8.462103      M   \n","\n","       age_grp employee_yn  order_date  \n","0            4           N    20230101  \n","1            4           Y    20230101  \n","2            4           N    20230101  \n","3            3           N    20230102  \n","4            3           N    20230101  \n","...        ...         ...         ...  \n","19655        5           Y    20230103  \n","19656        3           Y    20230102  \n","19657        3           Y    20230103  \n","19658        4           N    20230104  \n","19659        3           N    20230103  \n","\n","[19660 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-fe5601e7-e002-40b1-9085-5af861b732f3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101964282</td>\n","      <td>비비고 스팸부대찌개</td>\n","      <td>1.0</td>\n","      <td>8.161946</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101970142</td>\n","      <td>삼호 생선살어묵 야채</td>\n","      <td>1.0</td>\n","      <td>8.098947</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101965237</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>1.0</td>\n","      <td>8.277412</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230102973798</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>3.0</td>\n","      <td>9.145375</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230102</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101965633</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>2.0</td>\n","      <td>8.613230</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19655</th>\n","      <td>20230103986821</td>\n","      <td>비비고 찐만두</td>\n","      <td>1.0</td>\n","      <td>7.930566</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","    </tr>\n","    <tr>\n","      <th>19656</th>\n","      <td>20230102979023</td>\n","      <td>사골곰탕 한 그릇</td>\n","      <td>1.0</td>\n","      <td>8.477412</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230102</td>\n","    </tr>\n","    <tr>\n","      <th>19657</th>\n","      <td>20230103989581</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리</td>\n","      <td>10.0</td>\n","      <td>9.421249</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","    </tr>\n","    <tr>\n","      <th>19658</th>\n","      <td>20230104999357</td>\n","      <td>비비고 언양식 바싹불고기</td>\n","      <td>1.0</td>\n","      <td>8.594895</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230104</td>\n","    </tr>\n","    <tr>\n","      <th>19659</th>\n","      <td>20230103989710</td>\n","      <td>고메 중화짬뽕</td>\n","      <td>1.0</td>\n","      <td>8.462103</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230103</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19660 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe5601e7-e002-40b1-9085-5af861b732f3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fe5601e7-e002-40b1-9085-5af861b732f3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fe5601e7-e002-40b1-9085-5af861b732f3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","metadata":{"id":"tWwoQLjppHwR"},"source":["### **전처리**"]},{"cell_type":"markdown","metadata":{"id":"eIQmAvdKpHwR"},"source":["**product_name 원본 불러오기**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dqP9IBfepHwS"},"outputs":[],"source":["# Load your data frame\n","\n","test_data2 = pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/data/tmk_bda_test.csv', index_col=0,encoding='UTF-8')  # Replace 'your_data.csv' with your actual file path and encoding if needed\n","test_data2.reset_index(drop=True, inplace=True) \n","test_data['product_realname'] = test_data2['product_name']"]},{"cell_type":"code","source":["test_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Kyw7W56Yuup8","executionInfo":{"status":"ok","timestamp":1685598503103,"user_tz":-540,"elapsed":29,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"9ea8539a-15d3-445a-d2e1-0ece4fb918fa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd      product_name  net_order_qty  net_order_amt gender  \\\n","0      20230101964282        비비고 스팸부대찌개            1.0       8.161946      M   \n","1      20230101970142       삼호 생선살어묵 야채            1.0       8.098947      M   \n","2      20230101965237  크레잇 블랙페퍼 폭찹 스테이크            1.0       8.277412      F   \n","3      20230102973798       비비고 소고기 미역국            3.0       9.145375      F   \n","4      20230101965633       비비고 소고기 미역국            2.0       8.613230      F   \n","...               ...               ...            ...            ...    ...   \n","19655  20230103986821           비비고 찐만두            1.0       7.930566      M   \n","19656  20230102979023         사골곰탕 한 그릇            1.0       8.477412      F   \n","19657  20230103989581   쁘띠첼 자몽상큼함듬뿍워터젤리           10.0       9.421249      F   \n","19658  20230104999357     비비고 언양식 바싹불고기            1.0       8.594895      M   \n","19659  20230103989710           고메 중화짬뽕            1.0       8.462103      M   \n","\n","       age_grp employee_yn  order_date            product_realname  \n","0            4           N    20230101             비비고 스팸부대찌개 460g  \n","1            4           Y    20230101            삼호 생선살어묵 야채 200g  \n","2            4           N    20230101            크레잇 블랙페퍼 폭찹 스테이크  \n","3            3           N    20230102            비비고 소고기 미역국 500g  \n","4            3           N    20230101            비비고 소고기 미역국 500g  \n","...        ...         ...         ...                         ...  \n","19655        5           Y    20230103                 비비고 찐만두168g  \n","19656        3           Y    20230102  사골곰탕 한 그릇 100g (1-2인분X5개입)  \n","19657        3           Y    20230103       쁘띠첼 자몽상큼함듬뿍워터젤리 130ml  \n","19658        4           N    20230104          비비고 언양식 바싹불고기 460g  \n","19659        3           N    20230103                고메 중화짬뽕 652g  \n","\n","[19660 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-5cbbed8c-c189-4726-8eec-f9877f2400c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>product_realname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101964282</td>\n","      <td>비비고 스팸부대찌개</td>\n","      <td>1.0</td>\n","      <td>8.161946</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>비비고 스팸부대찌개 460g</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101970142</td>\n","      <td>삼호 생선살어묵 야채</td>\n","      <td>1.0</td>\n","      <td>8.098947</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>20230101</td>\n","      <td>삼호 생선살어묵 야채 200g</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101965237</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>1.0</td>\n","      <td>8.277412</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230102973798</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>3.0</td>\n","      <td>9.145375</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230102</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101965633</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>2.0</td>\n","      <td>8.613230</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230101</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19655</th>\n","      <td>20230103986821</td>\n","      <td>비비고 찐만두</td>\n","      <td>1.0</td>\n","      <td>7.930566</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","      <td>비비고 찐만두168g</td>\n","    </tr>\n","    <tr>\n","      <th>19656</th>\n","      <td>20230102979023</td>\n","      <td>사골곰탕 한 그릇</td>\n","      <td>1.0</td>\n","      <td>8.477412</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230102</td>\n","      <td>사골곰탕 한 그릇 100g (1-2인분X5개입)</td>\n","    </tr>\n","    <tr>\n","      <th>19657</th>\n","      <td>20230103989581</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리</td>\n","      <td>10.0</td>\n","      <td>9.421249</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>20230103</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리 130ml</td>\n","    </tr>\n","    <tr>\n","      <th>19658</th>\n","      <td>20230104999357</td>\n","      <td>비비고 언양식 바싹불고기</td>\n","      <td>1.0</td>\n","      <td>8.594895</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>20230104</td>\n","      <td>비비고 언양식 바싹불고기 460g</td>\n","    </tr>\n","    <tr>\n","      <th>19659</th>\n","      <td>20230103989710</td>\n","      <td>고메 중화짬뽕</td>\n","      <td>1.0</td>\n","      <td>8.462103</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>20230103</td>\n","      <td>고메 중화짬뽕 652g</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19660 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cbbed8c-c189-4726-8eec-f9877f2400c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5cbbed8c-c189-4726-8eec-f9877f2400c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5cbbed8c-c189-4726-8eec-f9877f2400c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["#은서언니가 한거에서 내가 확정지은거\n","exclude_words =['비비고','고메','밸런스밀','햇반','맥스봉','더건강한',  '행복한콩','밀당의고수','토종김','즐거운동행','크레잇','스팸', '육공육','삼호','명가','햄스빌','미정당','맛밤','주부초밥왕',\n","'쁘띠첼','플랜테이블','톡톡까먹어밤','쿡킷','쿠캣','딜라이트','주부유부왕', '밥이랑','그레인보울','밀키트','비요뜨','옥사부반점','계절밥상','VIPS','비엔나','우동','곰탕','우엉','깐메추리알','간짜장',\n","'동치미','도시락','쌀국수','새우까스','햄','돈까스', '만두', '단무지', '두부', '갈비탕', '소바', '너겟', '생면', '소시지', '바삭칩', '너비아니', '해쉬브라운', '당면', '사천마라탕면', '후랑크', \n","'야채고기말이', '스파게티', '파스타', '닭갈비','쌈무', '가쓰오','치킨', '단무지', '견과','냉동감자','포켓팝콘','그릴스모크','소면','냉면','찹스테이크','쯔란갈비','새우튀김','불고기','동그랑땡','칼국수','아이스크림','중면','대란','윙봉','볶음밥','피자','폭립','파히타','감바스','고르곤졸라','멕시칸타코','밀키트','선물','특별한선택','최고의선택']\n","\n","#'선물','특별한선택','최고의선택'\n","### 스파게티소스, 파스타소스, 돈까스 소스 인덱스 따로 저장\n","non_main_index1 = test_data[~test_data['product_realname'].str.contains('|'.join(exclude_words))].index\n","non_main_index2 =test_data[test_data['product_realname'].str.contains('|'.join(['스파게티소스','파스타소스', '돈까스 소스']))].index\n","non_main_index = non_main_index1.union(non_main_index2)\n","non_main_index "],"metadata":{"id":"OtrjX6auxY6p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685598503104,"user_tz":-540,"elapsed":28,"user":{"displayName":"지연","userId":"04505810097762875151"}},"outputId":"9b88a9a4-92f7-4ece-df57-d14ea052b106"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Int64Index([   14,    18,    24,    56,    66,    68,    70,    74,    75,\n","               84,\n","            ...\n","            19543, 19573, 19581, 19582, 19585, 19587, 19591, 19612, 19632,\n","            19648],\n","           dtype='int64', length=2261)"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["non_main= test_data[~test_data['product_realname'].str.contains('|'.join(exclude_words))]\n","pd.DataFrame(non_main['product_realname'].value_counts())"],"metadata":{"id":"CuJR9gSS0k2N","executionInfo":{"status":"ok","timestamp":1685598503104,"user_tz":-540,"elapsed":24,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"f1106000-7cc0-446b-a903-0bec73c32dec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     product_realname\n","찹쌀 호떡믹스 400g                                       55\n","[500개한정] 백설 포도씨유 900mlx2개                          35\n","백설 참치액 진더풍부한맛 500g                                 31\n","백설 남해굴소스 500g                                      28\n","백설 소갈비양념 840g                                      27\n","...                                               ...\n","바질&로즈마리드레싱 235g                                     1\n","[임직원]리턴업 콜레스테롤케어 60캡슐(1개월)x2개                       1\n","양갈비 어깨살 300g+시즈닝 2종                                 1\n","[임직원]BYO 프리바이오틱스 FOS플러스 30포(1개월)x3개                 1\n","백설 카놀라유 500ml                                       1\n","\n","[610 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-06f254a1-e815-4bd0-aba5-7e54f8e8d661\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>product_realname</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>찹쌀 호떡믹스 400g</th>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>[500개한정] 백설 포도씨유 900mlx2개</th>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>백설 참치액 진더풍부한맛 500g</th>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>백설 남해굴소스 500g</th>\n","      <td>28</td>\n","    </tr>\n","    <tr>\n","      <th>백설 소갈비양념 840g</th>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>바질&amp;로즈마리드레싱 235g</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[임직원]리턴업 콜레스테롤케어 60캡슐(1개월)x2개</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>양갈비 어깨살 300g+시즈닝 2종</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>[임직원]BYO 프리바이오틱스 FOS플러스 30포(1개월)x3개</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>백설 카놀라유 500ml</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>610 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06f254a1-e815-4bd0-aba5-7e54f8e8d661')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-06f254a1-e815-4bd0-aba5-7e54f8e8d661 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-06f254a1-e815-4bd0-aba5-7e54f8e8d661');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["아주 잘 걸러졌어요~!"],"metadata":{"id":"XZCR0g1i0xWn"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"ohxuEh2Wxp-E"},"outputs":[],"source":["test_data.loc[non_main_index, 'non_main_yn'] = 1\n","test_data['non_main_yn'] =test_data['non_main_yn'].fillna(0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bLYrNZMGxp-F"},"outputs":[],"source":["#일자\n","test_data['order_date']=pd.to_datetime(test_data['order_date'].astype(str), format='%Y%m%d')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qu6tFqN-xp-F","executionInfo":{"status":"ok","timestamp":1685598504589,"user_tz":-540,"elapsed":1507,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":519},"outputId":"92da258b-de21-4587-a246-4f4964b93bdd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd      product_name  net_order_qty  net_order_amt gender  \\\n","0      20230101964282        비비고 스팸부대찌개            1.0       8.161946      M   \n","1      20230101970142       삼호 생선살어묵 야채            1.0       8.098947      M   \n","2      20230101965237  크레잇 블랙페퍼 폭찹 스테이크            1.0       8.277412      F   \n","3      20230102973798       비비고 소고기 미역국            3.0       9.145375      F   \n","4      20230101965633       비비고 소고기 미역국            2.0       8.613230      F   \n","...               ...               ...            ...            ...    ...   \n","19655  20230103986821           비비고 찐만두            1.0       7.930566      M   \n","19656  20230102979023         사골곰탕 한 그릇            1.0       8.477412      F   \n","19657  20230103989581   쁘띠첼 자몽상큼함듬뿍워터젤리           10.0       9.421249      F   \n","19658  20230104999357     비비고 언양식 바싹불고기            1.0       8.594895      M   \n","19659  20230103989710           고메 중화짬뽕            1.0       8.462103      M   \n","\n","       age_grp employee_yn order_date            product_realname  \\\n","0            4           N 2023-01-01             비비고 스팸부대찌개 460g   \n","1            4           Y 2023-01-01            삼호 생선살어묵 야채 200g   \n","2            4           N 2023-01-01            크레잇 블랙페퍼 폭찹 스테이크   \n","3            3           N 2023-01-02            비비고 소고기 미역국 500g   \n","4            3           N 2023-01-01            비비고 소고기 미역국 500g   \n","...        ...         ...        ...                         ...   \n","19655        5           Y 2023-01-03                 비비고 찐만두168g   \n","19656        3           Y 2023-01-02  사골곰탕 한 그릇 100g (1-2인분X5개입)   \n","19657        3           Y 2023-01-03       쁘띠첼 자몽상큼함듬뿍워터젤리 130ml   \n","19658        4           N 2023-01-04          비비고 언양식 바싹불고기 460g   \n","19659        3           N 2023-01-03                고메 중화짬뽕 652g   \n","\n","       non_main_yn  event_yn  \n","0              0.0         1  \n","1              0.0         1  \n","2              0.0         1  \n","3              0.0         1  \n","4              0.0         1  \n","...            ...       ...  \n","19655          0.0         1  \n","19656          0.0         1  \n","19657          0.0         1  \n","19658          0.0         1  \n","19659          0.0         1  \n","\n","[19660 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-7ba3a2d9-8607-4329-94be-75e5d29d3276\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>product_realname</th>\n","      <th>non_main_yn</th>\n","      <th>event_yn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101964282</td>\n","      <td>비비고 스팸부대찌개</td>\n","      <td>1.0</td>\n","      <td>8.161946</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>비비고 스팸부대찌개 460g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101970142</td>\n","      <td>삼호 생선살어묵 야채</td>\n","      <td>1.0</td>\n","      <td>8.098947</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>삼호 생선살어묵 야채 200g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101965237</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>1.0</td>\n","      <td>8.277412</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230102973798</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>3.0</td>\n","      <td>9.145375</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-02</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101965633</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>2.0</td>\n","      <td>8.613230</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19655</th>\n","      <td>20230103986821</td>\n","      <td>비비고 찐만두</td>\n","      <td>1.0</td>\n","      <td>7.930566</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>2023-01-03</td>\n","      <td>비비고 찐만두168g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19656</th>\n","      <td>20230102979023</td>\n","      <td>사골곰탕 한 그릇</td>\n","      <td>1.0</td>\n","      <td>8.477412</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>2023-01-02</td>\n","      <td>사골곰탕 한 그릇 100g (1-2인분X5개입)</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19657</th>\n","      <td>20230103989581</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리</td>\n","      <td>10.0</td>\n","      <td>9.421249</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>2023-01-03</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리 130ml</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19658</th>\n","      <td>20230104999357</td>\n","      <td>비비고 언양식 바싹불고기</td>\n","      <td>1.0</td>\n","      <td>8.594895</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-04</td>\n","      <td>비비고 언양식 바싹불고기 460g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19659</th>\n","      <td>20230103989710</td>\n","      <td>고메 중화짬뽕</td>\n","      <td>1.0</td>\n","      <td>8.462103</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-03</td>\n","      <td>고메 중화짬뽕 652g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19660 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ba3a2d9-8607-4329-94be-75e5d29d3276')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7ba3a2d9-8607-4329-94be-75e5d29d3276 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7ba3a2d9-8607-4329-94be-75e5d29d3276');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}],"source":["test_data['event_yn']=0\n","test_data.loc[(test_data['order_date'] >= '2023-01-01') & (test_data['order_date']<='2023-01-11'),'event_yn']=1\n","#상품명으로 event 칼럼 넣기  #설사원은 임직원 event 칼럼 삭제할거라 고려하지 않아도됨.\n","test_data"]},{"cell_type":"markdown","source":["상품명으로 event"],"metadata":{"id":"tJLhp7dxp2NS"}},{"cell_type":"code","source":["test_data"],"metadata":{"id":"BBaqHT92rp3N","executionInfo":{"status":"ok","timestamp":1685598504590,"user_tz":-540,"elapsed":50,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":519},"outputId":"e5598cc1-cb96-47c5-a947-41af708b4366"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  scd      product_name  net_order_qty  net_order_amt gender  \\\n","0      20230101964282        비비고 스팸부대찌개            1.0       8.161946      M   \n","1      20230101970142       삼호 생선살어묵 야채            1.0       8.098947      M   \n","2      20230101965237  크레잇 블랙페퍼 폭찹 스테이크            1.0       8.277412      F   \n","3      20230102973798       비비고 소고기 미역국            3.0       9.145375      F   \n","4      20230101965633       비비고 소고기 미역국            2.0       8.613230      F   \n","...               ...               ...            ...            ...    ...   \n","19655  20230103986821           비비고 찐만두            1.0       7.930566      M   \n","19656  20230102979023         사골곰탕 한 그릇            1.0       8.477412      F   \n","19657  20230103989581   쁘띠첼 자몽상큼함듬뿍워터젤리           10.0       9.421249      F   \n","19658  20230104999357     비비고 언양식 바싹불고기            1.0       8.594895      M   \n","19659  20230103989710           고메 중화짬뽕            1.0       8.462103      M   \n","\n","       age_grp employee_yn order_date            product_realname  \\\n","0            4           N 2023-01-01             비비고 스팸부대찌개 460g   \n","1            4           Y 2023-01-01            삼호 생선살어묵 야채 200g   \n","2            4           N 2023-01-01            크레잇 블랙페퍼 폭찹 스테이크   \n","3            3           N 2023-01-02            비비고 소고기 미역국 500g   \n","4            3           N 2023-01-01            비비고 소고기 미역국 500g   \n","...        ...         ...        ...                         ...   \n","19655        5           Y 2023-01-03                 비비고 찐만두168g   \n","19656        3           Y 2023-01-02  사골곰탕 한 그릇 100g (1-2인분X5개입)   \n","19657        3           Y 2023-01-03       쁘띠첼 자몽상큼함듬뿍워터젤리 130ml   \n","19658        4           N 2023-01-04          비비고 언양식 바싹불고기 460g   \n","19659        3           N 2023-01-03                고메 중화짬뽕 652g   \n","\n","       non_main_yn  event_yn  \n","0              0.0         1  \n","1              0.0         1  \n","2              0.0         1  \n","3              0.0         1  \n","4              0.0         1  \n","...            ...       ...  \n","19655          0.0         1  \n","19656          0.0         1  \n","19657          0.0         1  \n","19658          0.0         1  \n","19659          0.0         1  \n","\n","[19660 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-ae36e08d-5114-4627-8c10-1f785646dbd9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>product_name</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>product_realname</th>\n","      <th>non_main_yn</th>\n","      <th>event_yn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101964282</td>\n","      <td>비비고 스팸부대찌개</td>\n","      <td>1.0</td>\n","      <td>8.161946</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>비비고 스팸부대찌개 460g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101970142</td>\n","      <td>삼호 생선살어묵 야채</td>\n","      <td>1.0</td>\n","      <td>8.098947</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>삼호 생선살어묵 야채 200g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101965237</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>1.0</td>\n","      <td>8.277412</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>크레잇 블랙페퍼 폭찹 스테이크</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230102973798</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>3.0</td>\n","      <td>9.145375</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-02</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101965633</td>\n","      <td>비비고 소고기 미역국</td>\n","      <td>2.0</td>\n","      <td>8.613230</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>비비고 소고기 미역국 500g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>19655</th>\n","      <td>20230103986821</td>\n","      <td>비비고 찐만두</td>\n","      <td>1.0</td>\n","      <td>7.930566</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>Y</td>\n","      <td>2023-01-03</td>\n","      <td>비비고 찐만두168g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19656</th>\n","      <td>20230102979023</td>\n","      <td>사골곰탕 한 그릇</td>\n","      <td>1.0</td>\n","      <td>8.477412</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>2023-01-02</td>\n","      <td>사골곰탕 한 그릇 100g (1-2인분X5개입)</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19657</th>\n","      <td>20230103989581</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리</td>\n","      <td>10.0</td>\n","      <td>9.421249</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>Y</td>\n","      <td>2023-01-03</td>\n","      <td>쁘띠첼 자몽상큼함듬뿍워터젤리 130ml</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19658</th>\n","      <td>20230104999357</td>\n","      <td>비비고 언양식 바싹불고기</td>\n","      <td>1.0</td>\n","      <td>8.594895</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>N</td>\n","      <td>2023-01-04</td>\n","      <td>비비고 언양식 바싹불고기 460g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19659</th>\n","      <td>20230103989710</td>\n","      <td>고메 중화짬뽕</td>\n","      <td>1.0</td>\n","      <td>8.462103</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>N</td>\n","      <td>2023-01-03</td>\n","      <td>고메 중화짬뽕 652g</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19660 rows × 11 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae36e08d-5114-4627-8c10-1f785646dbd9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ae36e08d-5114-4627-8c10-1f785646dbd9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ae36e08d-5114-4627-8c10-1f785646dbd9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["# 상품명으로 event 칼럼 넣기  \n","# 설사원은 임직원 event 칼럼 삭제할거라 고려하지 않아도됨.\n","event_index = test_data[test_data['product_realname'].str.contains('|'.join(['설선물']))].index\n","test_data.loc[event_index, 'event_yn'] = 1"],"metadata":{"id":"U3bqgw_Wp1iA"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["추가) 앱전용특가 칼럼\n"],"metadata":{"id":"4cg85AXUxp-F"}},{"cell_type":"code","source":["app_index= test_data[test_data['product_name'].str.contains('앱전용특가')].index\n","test_data.loc[app_index, 'app_yn'] = 1\n","test_data['app_yn'] =test_data['app_yn'].fillna(0)"],"metadata":{"id":"8yUORL2vxp-F"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["추가) 패밀리 데이 칼럼"],"metadata":{"id":"Sw3cW5MTxp-G"}},{"cell_type":"code","source":["family_index= test_data[test_data['product_name'].str.contains('패밀리데이')].index\n","test_data.loc[family_index, 'family_yn'] = 1\n","test_data['family_yn'] =test_data['family_yn'].fillna(0)"],"metadata":{"id":"NEliy6gMxp-G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data['family_yn'].value_counts()"],"metadata":{"id":"hB9Tc7guxp-G","executionInfo":{"status":"ok","timestamp":1685598504593,"user_tz":-540,"elapsed":48,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e2f9ec81-74dc-4c7a-b98c-1471ea6c4b91"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    19583\n","1.0       77\n","Name: family_yn, dtype: int64"]},"metadata":{},"execution_count":73}]},{"cell_type":"markdown","source":["추가) 한정"],"metadata":{"id":"U1r6Po60xp-G"}},{"cell_type":"code","source":["limited_index= test_data[test_data['product_name'].str.contains('한정')].index\n","test_data.loc[limited_index, 'limited_yn'] = 1\n","test_data['limited_yn'] =test_data['limited_yn'].fillna(0)"],"metadata":{"id":"Tf016MW1xp-G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data['limited_yn'].value_counts()"],"metadata":{"id":"vV3LesHOxp-G","executionInfo":{"status":"ok","timestamp":1685598504595,"user_tz":-540,"elapsed":42,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8911176e-feb2-4614-971d-308f91bbc9b3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0    19660\n","Name: limited_yn, dtype: int64"]},"metadata":{},"execution_count":75}]},{"cell_type":"markdown","source":["추가) 선물\n","\n","임직원 -> 설사원 , 생일 선물\n","\n","비임직원 -> 설선물"],"metadata":{"id":"O_Jszvazxp-H"}},{"cell_type":"code","source":["#임직원 -> 설사원\n","empseol_index= test_data[test_data['product_name'].str.contains('설사원')].index\n","test_data.loc[empseol_index, 'empseol_yn'] = 1\n","test_data['empseol_yn'] =test_data['empseol_yn'].fillna(0)"],"metadata":{"id":"2PwqzsZUxp-H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#임직원 -> 생일선물\n","birthday_index= test_data[test_data['product_name'].str.contains('생일 선물')].index\n","test_data.loc[birthday_index, 'birthday_yn'] = 1\n","test_data['birthday_yn'] =test_data['birthday_yn'].fillna(0)"],"metadata":{"id":"cqVmuuuexp-H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#비임직원 -> 설선물\n","seol_index= test_data[test_data['product_name'].str.contains('설선물')].index\n","test_data.loc[seol_index, 'seol_yn'] = 1\n","test_data['seol_yn'] =test_data['seol_yn'].fillna(0)"],"metadata":{"id":"Vjf_TXJExp-H"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xs5tRO0vxp-H"},"source":["2) 주문번호 카테고리화 \n","\n","net_order_amt -> sum\n","\n","age_grp 그대로"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XE9wcKadxp-I"},"outputs":[],"source":["test_data['net_order_type'] = test_data.groupby('scd')['scd'].transform('size')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E55_rTc5xp-I","executionInfo":{"status":"ok","timestamp":1685598504599,"user_tz":-540,"elapsed":40,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"49550f9c-32da-4671-bed2-3ba113b0c4b9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 scd gender  age_grp  net_order_qty  net_order_amt  \\\n","0     20230101963221      F        3            1.0       7.959975   \n","1     20230101963226      M        3            8.0      37.321156   \n","2     20230101963229      M        5            1.0       9.003808   \n","3     20230101963246      M        2            2.0       9.574080   \n","4     20230101963265      F        3           15.0      43.665790   \n","...              ...    ...      ...            ...            ...   \n","6323  20230131216228      F        3            2.0       9.021961   \n","6324  20230131216338      M        4            3.0      16.394430   \n","6325  20230131216371      F        3            2.0      16.019650   \n","6326  20230131216446      F        4            1.0       8.655214   \n","6327  20230131216584      M        4            1.0       9.036701   \n","\n","     employee_yn order_date  non_main_yn  net_order_type  app_yn  family_yn  \\\n","0              N 2023-01-01          0.0               1     0.0        0.0   \n","1              Y 2023-01-01          0.0               4     0.0        0.0   \n","2              Y 2023-01-01          0.0               1     0.0        0.0   \n","3              Y 2023-01-01          0.0               1     0.0        0.0   \n","4              Y 2023-01-01          0.0               5     0.0        0.0   \n","...          ...        ...          ...             ...     ...        ...   \n","6323           N 2023-01-31          0.0               1     0.0        0.0   \n","6324           N 2023-01-31          0.0               2     0.0        0.0   \n","6325           N 2023-01-31          0.0               2     0.0        0.0   \n","6326           N 2023-01-31          0.0               1     0.0        0.0   \n","6327           N 2023-01-31          0.0               1     0.0        0.0   \n","\n","      limited_yn  birthday_yn  seol_yn  empseol_yn  event_yn  \n","0            0.0          0.0      0.0         0.0         1  \n","1            0.0          0.0      0.0         0.0         1  \n","2            0.0          0.0      0.0         0.0         1  \n","3            0.0          0.0      0.0         0.0         1  \n","4            0.0          0.0      0.0         0.0         1  \n","...          ...          ...      ...         ...       ...  \n","6323         0.0          0.0      0.0         0.0         0  \n","6324         0.0          0.0      0.0         0.0         0  \n","6325         0.0          0.0      0.0         0.0         0  \n","6326         0.0          0.0      0.0         0.0         0  \n","6327         0.0          0.0      0.0         0.0         0  \n","\n","[6328 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-e5d33203-9989-4390-8c81-a82fb0fb3bab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>gender</th>\n","      <th>age_grp</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>non_main_yn</th>\n","      <th>net_order_type</th>\n","      <th>app_yn</th>\n","      <th>family_yn</th>\n","      <th>limited_yn</th>\n","      <th>birthday_yn</th>\n","      <th>seol_yn</th>\n","      <th>empseol_yn</th>\n","      <th>event_yn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101963221</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>7.959975</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101963226</td>\n","      <td>M</td>\n","      <td>3</td>\n","      <td>8.0</td>\n","      <td>37.321156</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101963229</td>\n","      <td>M</td>\n","      <td>5</td>\n","      <td>1.0</td>\n","      <td>9.003808</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230101963246</td>\n","      <td>M</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>9.574080</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101963265</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>15.0</td>\n","      <td>43.665790</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6323</th>\n","      <td>20230131216228</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>2.0</td>\n","      <td>9.021961</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6324</th>\n","      <td>20230131216338</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>3.0</td>\n","      <td>16.394430</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6325</th>\n","      <td>20230131216371</td>\n","      <td>F</td>\n","      <td>3</td>\n","      <td>2.0</td>\n","      <td>16.019650</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6326</th>\n","      <td>20230131216446</td>\n","      <td>F</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>8.655214</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6327</th>\n","      <td>20230131216584</td>\n","      <td>M</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>9.036701</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6328 rows × 16 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5d33203-9989-4390-8c81-a82fb0fb3bab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5d33203-9989-4390-8c81-a82fb0fb3bab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5d33203-9989-4390-8c81-a82fb0fb3bab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":80}],"source":["group_data = test_data.groupby('scd').agg({'gender': 'first', 'age_grp': 'first', 'net_order_qty' : 'sum',\n","                                      'net_order_amt': 'sum','employee_yn':'first',\n","                                      'order_date':'first',\t'non_main_yn':'sum','net_order_type':'first',\n","                                      'app_yn':'sum','family_yn':'sum','limited_yn':'sum',\n","                                      'birthday_yn':'sum','seol_yn':'sum','empseol_yn':'sum','event_yn':'first'}).reset_index()\n","#'app_yn':'sum'\n","#'event_yn':'first'\n","group_data"]},{"cell_type":"markdown","metadata":{"id":"SXkeOW_sxp-J"},"source":["3) 주류 비주류 경우의 수 2개 확인 및 결정"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lOd4g-vLxp-J"},"outputs":[],"source":["#방법1\n","group_data[group_data['non_main_yn'] >=1] \n","#10653명 중에 3953명이 비주류를 구매하였다.절반 이하.. 비율로 가야함.\n","group_data['non_main_yn'] = group_data['non_main_yn'] / group_data['net_order_type']"]},{"cell_type":"markdown","metadata":{"id":"lprTa5Dzxp-J"},"source":["5) 인코딩"]},{"cell_type":"markdown","source":["빈도인코딩"],"metadata":{"id":"2b9w5QRyxp-J"}},{"cell_type":"code","source":["group_data = pd.get_dummies(group_data, columns=['age_grp'], prefix=['age_grp'])\n","\n","#성별도 빈도인코딩\n","frequency_encoding2 = group_data['gender'].value_counts(normalize=True).to_dict()\n","group_data['gender_freq_enc'] = group_data['gender'].map(frequency_encoding2)"],"metadata":{"id":"nAW_hXSyxp-J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["group_data"],"metadata":{"id":"jVNoC1hsxp-K","executionInfo":{"status":"ok","timestamp":1685598504601,"user_tz":-540,"elapsed":39,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"59e9e894-f535-42e8-8e47-9dc932067dc0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 scd gender  net_order_qty  net_order_amt employee_yn  \\\n","0     20230101963221      F            1.0       7.959975           N   \n","1     20230101963226      M            8.0      37.321156           Y   \n","2     20230101963229      M            1.0       9.003808           Y   \n","3     20230101963246      M            2.0       9.574080           Y   \n","4     20230101963265      F           15.0      43.665790           Y   \n","...              ...    ...            ...            ...         ...   \n","6323  20230131216228      F            2.0       9.021961           N   \n","6324  20230131216338      M            3.0      16.394430           N   \n","6325  20230131216371      F            2.0      16.019650           N   \n","6326  20230131216446      F            1.0       8.655214           N   \n","6327  20230131216584      M            1.0       9.036701           N   \n","\n","     order_date  non_main_yn  net_order_type  app_yn  family_yn  ...  seol_yn  \\\n","0    2023-01-01          0.0               1     0.0        0.0  ...      0.0   \n","1    2023-01-01          0.0               4     0.0        0.0  ...      0.0   \n","2    2023-01-01          0.0               1     0.0        0.0  ...      0.0   \n","3    2023-01-01          0.0               1     0.0        0.0  ...      0.0   \n","4    2023-01-01          0.0               5     0.0        0.0  ...      0.0   \n","...         ...          ...             ...     ...        ...  ...      ...   \n","6323 2023-01-31          0.0               1     0.0        0.0  ...      0.0   \n","6324 2023-01-31          0.0               2     0.0        0.0  ...      0.0   \n","6325 2023-01-31          0.0               2     0.0        0.0  ...      0.0   \n","6326 2023-01-31          0.0               1     0.0        0.0  ...      0.0   \n","6327 2023-01-31          0.0               1     0.0        0.0  ...      0.0   \n","\n","      empseol_yn  event_yn  age_grp_1  age_grp_2  age_grp_3  age_grp_4  \\\n","0            0.0         1          0          0          1          0   \n","1            0.0         1          0          0          1          0   \n","2            0.0         1          0          0          0          0   \n","3            0.0         1          0          1          0          0   \n","4            0.0         1          0          0          1          0   \n","...          ...       ...        ...        ...        ...        ...   \n","6323         0.0         0          0          0          1          0   \n","6324         0.0         0          0          0          0          1   \n","6325         0.0         0          0          0          1          0   \n","6326         0.0         0          0          0          0          1   \n","6327         0.0         0          0          0          0          1   \n","\n","      age_grp_5  age_grp_6  gender_freq_enc  \n","0             0          0         0.566688  \n","1             0          0         0.433312  \n","2             1          0         0.433312  \n","3             0          0         0.433312  \n","4             0          0         0.566688  \n","...         ...        ...              ...  \n","6323          0          0         0.566688  \n","6324          0          0         0.433312  \n","6325          0          0         0.566688  \n","6326          0          0         0.566688  \n","6327          0          0         0.433312  \n","\n","[6328 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-fa1dafc7-0e0d-40ad-8a8c-eb19d673a82b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>gender</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>employee_yn</th>\n","      <th>order_date</th>\n","      <th>non_main_yn</th>\n","      <th>net_order_type</th>\n","      <th>app_yn</th>\n","      <th>family_yn</th>\n","      <th>...</th>\n","      <th>seol_yn</th>\n","      <th>empseol_yn</th>\n","      <th>event_yn</th>\n","      <th>age_grp_1</th>\n","      <th>age_grp_2</th>\n","      <th>age_grp_3</th>\n","      <th>age_grp_4</th>\n","      <th>age_grp_5</th>\n","      <th>age_grp_6</th>\n","      <th>gender_freq_enc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101963221</td>\n","      <td>F</td>\n","      <td>1.0</td>\n","      <td>7.959975</td>\n","      <td>N</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101963226</td>\n","      <td>M</td>\n","      <td>8.0</td>\n","      <td>37.321156</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101963229</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>9.003808</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230101963246</td>\n","      <td>M</td>\n","      <td>2.0</td>\n","      <td>9.574080</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101963265</td>\n","      <td>F</td>\n","      <td>15.0</td>\n","      <td>43.665790</td>\n","      <td>Y</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6323</th>\n","      <td>20230131216228</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>9.021961</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6324</th>\n","      <td>20230131216338</td>\n","      <td>M</td>\n","      <td>3.0</td>\n","      <td>16.394430</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>6325</th>\n","      <td>20230131216371</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>16.019650</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6326</th>\n","      <td>20230131216446</td>\n","      <td>F</td>\n","      <td>1.0</td>\n","      <td>8.655214</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6327</th>\n","      <td>20230131216584</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>9.036701</td>\n","      <td>N</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6328 rows × 22 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa1dafc7-0e0d-40ad-8a8c-eb19d673a82b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fa1dafc7-0e0d-40ad-8a8c-eb19d673a82b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fa1dafc7-0e0d-40ad-8a8c-eb19d673a82b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","metadata":{"id":"Z3Fyx_e2xp-K"},"source":["7) 임직원, 비임직원 나누고 각각 train, test셋 설정하기\n","\n","임직원은 이벤트 칼럼삭제하기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-eXrPl1Nxp-K"},"outputs":[],"source":["#임직원\n","employee_data = group_data[group_data['employee_yn']=='Y']\n","#비임직원- 일반회원\n","n_employee_data = group_data[group_data['employee_yn']=='N']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pi01bvv3xp-K"},"outputs":[],"source":["employee_data= employee_data.drop(['employee_yn'],axis=1)\n","n_employee_data= n_employee_data.drop(['employee_yn'],axis=1)"]},{"cell_type":"code","source":["employee_data"],"metadata":{"id":"V14rlWpqzZcU","executionInfo":{"status":"ok","timestamp":1685598504603,"user_tz":-540,"elapsed":38,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"204d7039-0f3e-475b-8f79-a170d43cb054"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 scd gender  net_order_qty  net_order_amt order_date  \\\n","1     20230101963226      M            8.0      37.321156 2023-01-01   \n","2     20230101963229      M            1.0       9.003808 2023-01-01   \n","3     20230101963246      M            2.0       9.574080 2023-01-01   \n","4     20230101963265      F           15.0      43.665790 2023-01-01   \n","5     20230101963284      F            4.0      24.197278 2023-01-01   \n","...              ...    ...            ...            ...        ...   \n","6311  20230131215141      M           30.0      21.044025 2023-01-31   \n","6314  20230131215302      F            2.0      18.579710 2023-01-31   \n","6317  20230131215537      M            1.0       8.847216 2023-01-31   \n","6319  20230131215893      M            1.0       8.302266 2023-01-31   \n","6322  20230131215992      M            6.0      34.074758 2023-01-31   \n","\n","      non_main_yn  net_order_type  app_yn  family_yn  limited_yn  ...  \\\n","1        0.000000               4     0.0        0.0         0.0  ...   \n","2        0.000000               1     0.0        0.0         0.0  ...   \n","3        0.000000               1     0.0        0.0         0.0  ...   \n","4        0.000000               5     0.0        0.0         0.0  ...   \n","5        0.666667               3     0.0        0.0         0.0  ...   \n","...           ...             ...     ...        ...         ...  ...   \n","6311     1.000000               2     0.0        0.0         0.0  ...   \n","6314     1.000000               2     0.0        0.0         0.0  ...   \n","6317     0.000000               1     0.0        0.0         0.0  ...   \n","6319     0.000000               1     0.0        0.0         0.0  ...   \n","6322     0.000000               4     0.0        0.0         0.0  ...   \n","\n","      seol_yn  empseol_yn  event_yn  age_grp_1  age_grp_2  age_grp_3  \\\n","1         0.0         0.0         1          0          0          1   \n","2         0.0         0.0         1          0          0          0   \n","3         0.0         0.0         1          0          1          0   \n","4         0.0         0.0         1          0          0          1   \n","5         0.0         0.0         1          0          0          0   \n","...       ...         ...       ...        ...        ...        ...   \n","6311      0.0         0.0         0          0          0          0   \n","6314      0.0         0.0         0          0          0          0   \n","6317      0.0         0.0         0          0          0          1   \n","6319      0.0         0.0         0          0          0          1   \n","6322      0.0         0.0         0          0          0          1   \n","\n","      age_grp_4  age_grp_5  age_grp_6  gender_freq_enc  \n","1             0          0          0         0.433312  \n","2             0          1          0         0.433312  \n","3             0          0          0         0.433312  \n","4             0          0          0         0.566688  \n","5             1          0          0         0.566688  \n","...         ...        ...        ...              ...  \n","6311          1          0          0         0.433312  \n","6314          1          0          0         0.566688  \n","6317          0          0          0         0.433312  \n","6319          0          0          0         0.433312  \n","6322          0          0          0         0.433312  \n","\n","[2687 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-c172d74c-0172-4aba-be60-dd2fb8365813\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>gender</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>order_date</th>\n","      <th>non_main_yn</th>\n","      <th>net_order_type</th>\n","      <th>app_yn</th>\n","      <th>family_yn</th>\n","      <th>limited_yn</th>\n","      <th>...</th>\n","      <th>seol_yn</th>\n","      <th>empseol_yn</th>\n","      <th>event_yn</th>\n","      <th>age_grp_1</th>\n","      <th>age_grp_2</th>\n","      <th>age_grp_3</th>\n","      <th>age_grp_4</th>\n","      <th>age_grp_5</th>\n","      <th>age_grp_6</th>\n","      <th>gender_freq_enc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>20230101963226</td>\n","      <td>M</td>\n","      <td>8.0</td>\n","      <td>37.321156</td>\n","      <td>2023-01-01</td>\n","      <td>0.000000</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>20230101963229</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>9.003808</td>\n","      <td>2023-01-01</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20230101963246</td>\n","      <td>M</td>\n","      <td>2.0</td>\n","      <td>9.574080</td>\n","      <td>2023-01-01</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>20230101963265</td>\n","      <td>F</td>\n","      <td>15.0</td>\n","      <td>43.665790</td>\n","      <td>2023-01-01</td>\n","      <td>0.000000</td>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>20230101963284</td>\n","      <td>F</td>\n","      <td>4.0</td>\n","      <td>24.197278</td>\n","      <td>2023-01-01</td>\n","      <td>0.666667</td>\n","      <td>3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6311</th>\n","      <td>20230131215141</td>\n","      <td>M</td>\n","      <td>30.0</td>\n","      <td>21.044025</td>\n","      <td>2023-01-31</td>\n","      <td>1.000000</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>6314</th>\n","      <td>20230131215302</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>18.579710</td>\n","      <td>2023-01-31</td>\n","      <td>1.000000</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6317</th>\n","      <td>20230131215537</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>8.847216</td>\n","      <td>2023-01-31</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>6319</th>\n","      <td>20230131215893</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>8.302266</td>\n","      <td>2023-01-31</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>6322</th>\n","      <td>20230131215992</td>\n","      <td>M</td>\n","      <td>6.0</td>\n","      <td>34.074758</td>\n","      <td>2023-01-31</td>\n","      <td>0.000000</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2687 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c172d74c-0172-4aba-be60-dd2fb8365813')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c172d74c-0172-4aba-be60-dd2fb8365813 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c172d74c-0172-4aba-be60-dd2fb8365813');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["n_employee_data"],"metadata":{"id":"ZKW_1_A4za6V","executionInfo":{"status":"ok","timestamp":1685598504603,"user_tz":-540,"elapsed":37,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/","height":487},"outputId":"ce227431-8b06-4ead-aca5-9f49cc202e39"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 scd gender  net_order_qty  net_order_amt order_date  \\\n","0     20230101963221      F            1.0       7.959975 2023-01-01   \n","6     20230101963286      F            3.0       9.857496 2023-01-01   \n","7     20230101963302      F            2.0      16.855427 2023-01-01   \n","8     20230101963306      F           18.0      91.066060 2023-01-01   \n","9     20230101963315      F            4.0      10.185843 2023-01-01   \n","...              ...    ...            ...            ...        ...   \n","6323  20230131216228      F            2.0       9.021961 2023-01-31   \n","6324  20230131216338      M            3.0      16.394430 2023-01-31   \n","6325  20230131216371      F            2.0      16.019650 2023-01-31   \n","6326  20230131216446      F            1.0       8.655214 2023-01-31   \n","6327  20230131216584      M            1.0       9.036701 2023-01-31   \n","\n","      non_main_yn  net_order_type  app_yn  family_yn  limited_yn  ...  \\\n","0             0.0               1     0.0        0.0         0.0  ...   \n","6             0.0               1     0.0        0.0         0.0  ...   \n","7             0.0               2     0.0        0.0         0.0  ...   \n","8             0.0              11     0.0        0.0         0.0  ...   \n","9             0.0               1     0.0        0.0         0.0  ...   \n","...           ...             ...     ...        ...         ...  ...   \n","6323          0.0               1     0.0        0.0         0.0  ...   \n","6324          0.0               2     0.0        0.0         0.0  ...   \n","6325          0.0               2     0.0        0.0         0.0  ...   \n","6326          0.0               1     0.0        0.0         0.0  ...   \n","6327          0.0               1     0.0        0.0         0.0  ...   \n","\n","      seol_yn  empseol_yn  event_yn  age_grp_1  age_grp_2  age_grp_3  \\\n","0         0.0         0.0         1          0          0          1   \n","6         0.0         0.0         1          0          0          1   \n","7         0.0         0.0         1          0          0          0   \n","8         0.0         0.0         1          0          0          1   \n","9         0.0         0.0         1          0          0          1   \n","...       ...         ...       ...        ...        ...        ...   \n","6323      0.0         0.0         0          0          0          1   \n","6324      0.0         0.0         0          0          0          0   \n","6325      0.0         0.0         0          0          0          1   \n","6326      0.0         0.0         0          0          0          0   \n","6327      0.0         0.0         0          0          0          0   \n","\n","      age_grp_4  age_grp_5  age_grp_6  gender_freq_enc  \n","0             0          0          0         0.566688  \n","6             0          0          0         0.566688  \n","7             1          0          0         0.566688  \n","8             0          0          0         0.566688  \n","9             0          0          0         0.566688  \n","...         ...        ...        ...              ...  \n","6323          0          0          0         0.566688  \n","6324          1          0          0         0.433312  \n","6325          0          0          0         0.566688  \n","6326          1          0          0         0.566688  \n","6327          1          0          0         0.433312  \n","\n","[3641 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-ac04a6d5-c093-4ae0-8506-24b95bdd30ca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>scd</th>\n","      <th>gender</th>\n","      <th>net_order_qty</th>\n","      <th>net_order_amt</th>\n","      <th>order_date</th>\n","      <th>non_main_yn</th>\n","      <th>net_order_type</th>\n","      <th>app_yn</th>\n","      <th>family_yn</th>\n","      <th>limited_yn</th>\n","      <th>...</th>\n","      <th>seol_yn</th>\n","      <th>empseol_yn</th>\n","      <th>event_yn</th>\n","      <th>age_grp_1</th>\n","      <th>age_grp_2</th>\n","      <th>age_grp_3</th>\n","      <th>age_grp_4</th>\n","      <th>age_grp_5</th>\n","      <th>age_grp_6</th>\n","      <th>gender_freq_enc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20230101963221</td>\n","      <td>F</td>\n","      <td>1.0</td>\n","      <td>7.959975</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>20230101963286</td>\n","      <td>F</td>\n","      <td>3.0</td>\n","      <td>9.857496</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>20230101963302</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>16.855427</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>20230101963306</td>\n","      <td>F</td>\n","      <td>18.0</td>\n","      <td>91.066060</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>11</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>20230101963315</td>\n","      <td>F</td>\n","      <td>4.0</td>\n","      <td>10.185843</td>\n","      <td>2023-01-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6323</th>\n","      <td>20230131216228</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>9.021961</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6324</th>\n","      <td>20230131216338</td>\n","      <td>M</td>\n","      <td>3.0</td>\n","      <td>16.394430</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","    <tr>\n","      <th>6325</th>\n","      <td>20230131216371</td>\n","      <td>F</td>\n","      <td>2.0</td>\n","      <td>16.019650</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6326</th>\n","      <td>20230131216446</td>\n","      <td>F</td>\n","      <td>1.0</td>\n","      <td>8.655214</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.566688</td>\n","    </tr>\n","    <tr>\n","      <th>6327</th>\n","      <td>20230131216584</td>\n","      <td>M</td>\n","      <td>1.0</td>\n","      <td>9.036701</td>\n","      <td>2023-01-31</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.433312</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3641 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac04a6d5-c093-4ae0-8506-24b95bdd30ca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ac04a6d5-c093-4ae0-8506-24b95bdd30ca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ac04a6d5-c093-4ae0-8506-24b95bdd30ca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["비임직원"],"metadata":{"id":"UUrrDvLc4EbK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"AyDW7AjUzBBp"},"outputs":[],"source":["n_X_test = n_employee_data.drop(['scd','order_date','family_yn','empseol_yn',\t'birthday_yn','gender'], axis=1)"]},{"cell_type":"code","source":["n_xgb_clf.fit(n_X, n_y)\n","n_pred=n_xgb_clf.predict(n_X_test)"],"metadata":{"id":"AHf15TY1Ngae"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["임직원"],"metadata":{"id":"OqsmvCLa2kuI"}},{"cell_type":"code","source":["X_test = employee_data.drop(['scd','order_date','gender'], axis=1)"],"metadata":{"id":"9TDhfq2D2lWA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["xgb_clf.fit(X, y)\n","pred=xgb_clf.predict(X_test)"],"metadata":{"id":"kX_g4as22mhl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#주문번호별로 test data에 넣어주기\n","test_data=pd.read_csv('/content/mydrive/MyDrive/ESAA_cj_공모전/data/tmk_bda_test.csv')\n","\n","# 주문번호별로 예측값을 담을 데이터프레임 생성\n","predictions = pd.DataFrame(columns=['scd', 'prime_yn'])\n","\n","# 주문번호와 예측값을 데이터프레임에 추가\n","order_results = pd.DataFrame({'scd': n_employee_data['scd'], 'prime_yn': n_pred})\n","order_results2 = pd.DataFrame({'scd': employee_data['scd'], 'prime_yn': pred})\n","\n","# 결과를 전체 예측값 데이터프레임에 추가\n","predictions = pd.concat([predictions, order_results], ignore_index=True)\n","predictions = pd.concat([predictions, order_results2], ignore_index=True)\n","\n","# 예측값이 담긴 데이터프레임과 X_test 데이터를 주문번호로 병합\n","test_with_predictions = pd.merge(test_data, predictions, on='scd')\n","test_with_predictions=test_with_predictions.drop('prime_yn_x',axis=1)\n","test_with_predictions.rename(columns={'prime_yn_y': 'prime_yn'}, inplace=True)"],"metadata":{"id":"Un6ny4MNxFgP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# DataFrame을 저장할 경로와 파일명 지정\n","file_path = 'test_데마.csv'\n","\n","# DataFrame을 CSV 파일로 저장\n","test_with_predictions.to_csv(file_path, index=False)"],"metadata":{"id":"qJ03ceGv0yqK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["n_pred"],"metadata":{"id":"PQu2rD_NiguA","executionInfo":{"status":"ok","timestamp":1685598508452,"user_tz":-540,"elapsed":13,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"890f5d08-3a07-4c6b-b29f-a17136ac212c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 0, ..., 0, 0, 0])"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["pred"],"metadata":{"id":"4V7Nc1IUijLQ","executionInfo":{"status":"ok","timestamp":1685598508452,"user_tz":-540,"elapsed":11,"user":{"displayName":"지연","userId":"04505810097762875151"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"74c239a8-bb9d-4707-f4c1-ca4956fcb902"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 1, 0, ..., 1, 1, 1])"]},"metadata":{},"execution_count":95}]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"gpuType":"T4"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}